{"version":3,"sources":["components/app/app.module.css","components/modal-overlay/modal-overlay.module.css","components/spinner/spinner.module.css","pages/common.module.css","pages/order/order.module.css","components/localstorage.ts","services/hooks.ts","components/ingredient-details/ingredient-details.tsx","services/actions/selected-ingredient.ts","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/checkResponse.ts","utils/constants.ts","services/custom-fetch.tsx","services/refresh-token.tsx","services/actions/user-info.ts","services/actions/password.ts","pages/forgot-password.tsx","services/actions/data-api.ts","pages/ingredient/ingredient.tsx","services/actions/user-login.ts","pages/login.tsx","components/ingredient-card/ingredient-card.tsx","components/burger-ingredients/burger-ingredients.tsx","components/order-details/order-details.tsx","components/ingrediend-card-constructor/ingrediend-card-constructor.tsx","services/actions/order-number.ts","services/actions/constructor-list.ts","components/spinner/spinner.tsx","components/burger-сonstructor/burger-constructor.tsx","pages/main.tsx","pages/not-found-404.tsx","services/actions/user-register-api.ts","pages/register.tsx","pages/reset-password.tsx","utils/utils.ts","components/order-item/order-item.tsx","services/actions/websockets.ts","pages/feed/feed.tsx","services/actions/user-logout.ts","pages/orders/orders.tsx","components/order-component/order-component.tsx","pages/order/order.tsx","pages/profile/profile.tsx","components/protectedRoute.tsx","services/socket-middleware.ts","components/app-header/app-header.tsx","components/modal-switch.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/constructor-list.ts","services/reducers/selected-ingredient.ts","services/reducers/order-number.ts","services/reducers/data-api.ts","services/reducers/user-register-api.ts","services/reducers/user-login.ts","services/reducers/user-logout.ts","services/reducers/password.ts","services/reducers/user-info.ts","services/reducers/websockets.ts","services/reducers/root-reducer.ts","services/store.tsx","index.tsx","pages/feed/feed.module.css","components/order-component/order-component.module.css","components/order-item/order-item.module.css","pages/profile/profile.module.css","components/app-header/app-header.module.css","components/burger-сonstructor/burger-constructor.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredient-card/ingredient-card.module.css","pages/ingredient/ingredient.module.css","components/ingredient-details/ingredient-details.module.css","components/modal/modal.module.css","pages/orders/orders.module.css"],"names":["module","exports","loadStateFromLocalstorage","itemTag","burgerIngredientState","localStorage","getItem","JSON","parse","err","saveStateInLocalstorage","data","dataState","stringify","setItem","console","log","useAppSelector","selectorHook","useDispatch","dispatchHook","IngredientDetails","dataApi","state","dataApiReducer","ingredientId","useParams","elem","filter","item","_id","url","useRouteMatch","useEffect","className","StyleIngredientDetails","modalMain","src","image_large","alt","name","modalProps","calories","proteins","fat","carbohydrates","GET_SELECTED_INGREDIENT","RESET_SELECTED_INGREDIENT","ModalOverlay","props","children","onClose","modalOverlay","wrapper","onClick","e","target","currentTarget","Modal","header","modalRoot","document","getElementById","React","close","key","window","addEventListener","removeEventListener","ReactDOM","createPortal","ModalStyle","modalWrapper","type","checkResponse","res","ok","json","API_URL","WS_URL","customFetch","endpoint","method","body","fetch","headers","refreshToken","then","authToken","success","accessToken","split","userInfoRequestSuccess","user","userInfoRequestFailed","userInfoStatus","status","catch","GET_USER_INFO","ADD_USER_INFO","USER_INFO_REQUEST_FAILED","USER_INFO_REQUEST_SUCCESS","RESET_USER_INFO","USER_INFO_STATUS","getUserInfo","addUserInfo","payload","getUserInfoApi","dispatch","message","GET_RESET_PASSWORD_TOKEN_REQUEST","GET_RESET_PASSWORD_TOKEN_SUCCESS","GET_RESET_PASSWORD_TOKEN_FAILED","GET_RESET_PASSWORD_TOKEN_STATUS","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","RESET_PASSWORD_STATUS","getResetPasswordTokenStatus","resetPasswordStatus","resetPassword","Promise","reject","getResetPasswordToken","ForgotPasswordPage","getTokenStatusText","password","getTokenStatus","userInfo","userInfoRequest","useState","value","setValue","inputRef","useRef","history","useHistory","replace","pathname","fromForgotPassword","styles","main","container","form","onSubmit","preventDefault","placeholder","onChange","error","ref","onIconClick","setTimeout","current","focus","errorText","size","disclaimer","to","GET_DATA_API","GET_DATA_API_FAILED","GET_DATA_API_SUCCESS","SET_DATA_API","getDataApi","getDataApiFailed","getDataApiSuccess","setDataApi","getIngredientsApi","getIngredientsAndCurrent","id","currentIngredient","IngredientPage","selectedIngredient","StyleIngredient","card","GET_USER_LOGIN","GET_USER_LOGIN_FAILED","GET_USER_LOGIN_SUCCESS","getUserLoginFailed","userLoginRequest","LoginPage","setPassword","email","setEmail","lastPage","setLastPage","from","location","onLogin","useCallback","IngredientCard","useLocation","useDrag","collect","monitor","isDragging","drag","opacity","styleIngredientCard","ingedientCard","style","background","image","counter","count","priceWrapper","price","titleCard","BurgerIngredients","dataApiRequest","dataApiFailed","length","setCurrent","refTitle","refBun","refMain","reSauce","changeTab","scrollIntoView","behavior","getTabs","map","tab","active","blockIngredientsType","pKey","ulKey","refName","category","styleBurgerIngredient","ingedientType","ingredient","tabsWrapper","ingedientCardContainer","onScroll","topTitle","getBoundingClientRect","top","OrderDetails","orderNumber","IngrediendCardConstructor","memo","onDeleteIngredient","moveCard","findCard","originalIndex","index","end","droppedId","didDrop","dragSort","useDrop","accept","hover","draggedId","overIndex","dropSort","node","cursor","isLocked","text","thumbnail","handleClose","GET_ORDER_API","GET_ORDER_API_FAILED","GET_ORDER_API_SUCCESS","RESET_ORDER","getOrderFailed","getOrder","order","number","GET_INGREDIENTS_CONSTRUCTOR_BUN","GET_INGREDIENTS_CONSTRUCTOR_MAIN","ADD_INGREDIENTS_CONSTRUCTOR_MAIN","RESET_INGREDIENTS_CONSTRUCTOR","SORT_INGREDIENTS_CONSTRUCTOR","getIngredientsConstructorBun","getIngredientsConstructorMain","Spinner","layer1","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","fillOpacity","cx","cy","r","gradientUnits","gradientTransform","stopColor","stopOpacity","offset","layer2","layer3","SpinnerStyle","iconWrapper","BurgerConstructor","constructorList","bun","orderApiRequest","orderApiFailed","totalPrice","setTotalPrice","isActiveStyleClass","setActiveStyleClass","handleCloseModal","arrayWithZeroCounter","useMemo","totalBun","totalIngedients","forEach","uid","newIngerientsAr","newArrDataApi","getBunElement","pos","textPosition","uuidv4","c","findIndex","atIndex","newArr","update","$splice","drop","arrayWithNewCounter","ingred","emptyBunTop","styleBurgerConstructor","emptyTopElement","emptyBunBottom","emptyBottomElement","emptyMain","emptyIngredientElements","scroll","totalWrapper","nonActiveButton","allSelectedIdBun","allSelectedIdBMain","allSelectedId","concat","getOrderNumberApi","push","MainPage","DndProvider","backend","HTML5Backend","NotFound404","GET_USER_REGISTER_API","GET_USER_REGISTER_API_FAILED","GET_USER_REGISTER_API_SUCCESS","getUserRegisterApiFailed","getUserRegisterApiRequest","RegisterPage","setName","ResetPasswordPage","resetPasswordStatusText","isFromForgotPage","getDataOrder","dayjs","extend","updateLocale","relativeTime","future","past","s","m","mm","h","hh","dd","M","MM","y","yy","dataTime","format","fromNow","setShortName","substring","OrderItem","createdAt","ingredients","orderedIngredients","sum","foundIngredient","find","IconsIngredient","indexIcon","wrapperIconImg","lastIconIngredient","path","headerCard","getStatus","footerCard","wrapperIcons","wrapperPrice","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDERS","wsConnectionStart","wsConnectionClosed","wsActions","wsConnectionSuccess","wsConnectionError","wsGetOrders","FeedPage","wsConnection","orders","total","totalToday","getNumsOrdersbyStatus","statusOrder","numsOrdersByDone","numsOrdersByPending","wrapperOrder","orderList","сommonInfo","orderDisplay","waveColor","wrapperStatus","digits","USER_LOGOUT_REQUEST","USER_LOGOUT_REQUEST_FAILED","USER_LOGOUT_REQUEST_SUCCESS","userLogoutFailed","userLogoutRequestApi","OrdersPage","section","ordersList","OrderComponent","currentOrder","uniquListIngredient","Array","Set","includes","IngredientInOrder","stylesOrderComp","wrapperLi","liText","liCount","orderMain","numberOrderleft","numberOrderCenter","footer","OrderPage","stylesOrder","ProfilePage","inputName","setInputName","login","setLogin","inputRefName","inputRefEmail","inputRefPassword","isButtonShow","setIsButtonShow","iconName","setIconName","iconEmail","setIconEmail","iconPassword","setIconPassword","disableName","setdisableName","disableEmail","setdisableEmail","disablePassword","setdisablePassword","typeInputPassword","setTypeInputPassword","showButton","onChangeUserInfo","setIconNameAll","ChangeButton","ProfileStyles","changeButton","Profile","icon","disabled","loginView","profileView","menu","exact","secondary","activeClassName","primary","textBtn","ProtectedRoute","rest","isUserLoaded","setUserLoaded","render","AppHeader","colorConstructor","setColorConstructor","colorOrders","setColorOrders","colorProfile","setColorProfiles","styleHeader","btn","ModalSwitch","isModalOpen","setIsModalOnen","goBack","App","styleApp","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","userRegisterApiRequest","userRegisterApiFailed","userRegisterApi","userLoginRequest1","userLoginFailed","userLogoutRequest","userLogoutRequestFailed","getTokenRequest","getTokenFailed","resetPasswordRequest","resetPasswordFailed","wsConnectionState","wsConnected","rootReducer","combineReducers","userLogin","userLogout","undefined","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","socket","next","WebSocket","onopen","onerror","onmessage","event","parsedData","onclose","createStore","StrictMode"],"mappings":"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","file":"static/js/main.fef7b98c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__uCHl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"modal-overlay_wrapper__2tvkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconWrapper\":\"spinner_iconWrapper__2LEP1\",\"spin\":\"spinner_spin__1iWiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"common_container__1O6ty\",\"form\":\"common_form__3e3RJ\",\"disclaimer\":\"common_disclaimer__2DeGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order_wrapper__1J5td\"};","\r\nexport const loadStateFromLocalstorage = (itemTag:string) => {\r\n    try {\r\n      const burgerIngredientState = localStorage.getItem(itemTag)\r\n  \r\n      if (burgerIngredientState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(burgerIngredientState);\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  };\r\n  \r\n  export const saveStateInLocalstorage = (itemTag:string, data: any) => {\r\n    try {\r\n      const dataState = JSON.stringify(data);\r\n      localStorage.setItem(`${itemTag}`, dataState)\r\n    } catch (err) {\r\n       console.log(err)\r\n    }\r\n  }","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n\r\n  import { AppDispatch, AppThunk, TRootState } from './types';\r\n\r\n  // Теперь этот хук «знает» структуру хранилища\r\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = selectorHook; \r\n\r\n// Хук не даст отправить экшен, который ему не знаком\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","import { useEffect } from 'react';\r\nimport { useParams, useRouteMatch} from \"react-router-dom\";\r\nimport StyleIngredientDetails from './ingredient-details.module.css';\r\nimport { saveStateInLocalstorage } from '../localstorage';\r\nimport { useAppSelector } from '../../services/hooks';\r\n\r\nconst IngredientDetails = () => {\r\n  const { dataApi } = useAppSelector(state => state.dataApiReducer)\r\n  let { ingredientId }: {[name: string]: string} = useParams();\r\n  const elem = dataApi.filter(item => item._id === ingredientId)[0]\r\n  const { url } = useRouteMatch();\r\n\r\n  //Сохранение дынных об открытом модальном окне в localStorage\r\n  useEffect(()=> {\r\n    if(url){\r\n        saveStateInLocalstorage('ingredientInModal', url);\r\n    }\r\n  },[url])\r\n\r\n    if(elem) {return(\r\n        <section className={`${StyleIngredientDetails.modalMain} `}>\r\n            <img src={elem.image_large} alt={elem.name} className={`mr-4`}/>\r\n            <p className={`text text_type_main-medium mb-4`}>\r\n              {elem.name}</p>\r\n            <p className=\"text text_type_main-small mb-4\">\r\n                Превосходные котлеты из марсианской Магнолии для фирменных космических бургеров, набирающий популярность по всей вселенной\r\n            </p>\r\n            <ul className={`${StyleIngredientDetails.modalProps} pl-1 mt-8`}>\r\n                <li className={`mr-5`}>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">Калории,ккал</p>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">{elem.calories}</p>\r\n                </li >\r\n                <li className={`mr-5`}>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">Белки, г</p>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">{elem.proteins}</p>\r\n                </li>\r\n                <li className={`mr-5`}>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">Жиры, г</p>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">{elem.fat}</p>\r\n                </li>\r\n                <li>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">Углеводы, г</p>\r\n                  <p className=\"text text_type_main-default text_color_inactive\">{elem.carbohydrates}</p>\r\n                </li>\r\n            </ul>\r\n            </section>\r\n    )} else return (<></>)\r\n};  \r\n\r\nexport default IngredientDetails;","import { IIngredient } from \"../types/data\";\r\n\r\nexport const GET_SELECTED_INGREDIENT: 'GET_SELECTED_INGREDIENT' = 'GET_SELECTED_INGREDIENT';\r\nexport const RESET_SELECTED_INGREDIENT: 'RESET_SELECTED_INGREDIENT' = 'RESET_SELECTED_INGREDIENT';\r\n\r\nexport interface IGetSelectedIngredient {\r\n  readonly type: typeof GET_SELECTED_INGREDIENT,\r\n  selectedIngredient: IIngredient\r\n}\r\nexport interface IResetSelectedIngredient {\r\n  readonly type: typeof RESET_SELECTED_INGREDIENT\r\n}\r\n\r\nexport type TSelectedIngredientActions = \r\n    IGetSelectedIngredient | \r\n    IResetSelectedIngredient |\r\n    any;\r\n\r\n\r\nfunction getSelectedIngredient(payload: IIngredient) {\r\n    return {\r\n      type: GET_SELECTED_INGREDIENT ,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction resetSelectedIngredient() {\r\n    return {\r\n      type: RESET_SELECTED_INGREDIENT \r\n    }\r\n}\r\n\r\nexport {\r\n    getSelectedIngredient,\r\n    resetSelectedIngredient\r\n}","import modalOverlay from \"./modal-overlay.module.css\";\r\nimport { IModal } from \"../../services/types/data\";\r\nimport { MouseEvent } from \"react\";\r\n\r\n\r\n\r\nconst ModalOverlay = (props:IModal) => {\r\n    const {children, onClose} = props;\r\n\r\n    const handleCloseModal = (e: MouseEvent) => {\r\n        if((e.target === e.currentTarget)){\r\n            onClose()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={modalOverlay.wrapper} data-name=\"overlay\" onClick={handleCloseModal}>\r\n            {children}\r\n        </div>\r\n      );\r\n};\r\n\r\n\r\nexport default ModalOverlay;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport { IModal } from '../../services/types/data';\r\n\r\nimport ModalStyle from './modal.module.css';\r\n\r\nconst Modal = (props:IModal) => {\r\n    const {header, onClose} = props;\r\n    const modalRoot: any = document.getElementById(\"reactModals\");\r\n\r\n    React.useEffect(() => {\r\n        const close = (e: KeyboardEvent) => {\r\n          if(e.key === \"Escape\"){\r\n            onClose()\r\n          }\r\n        }\r\n        window.addEventListener('keydown', close)\r\n      return () => window.removeEventListener('keydown', close)\r\n    },[onClose])\r\n\r\n    return ReactDOM.createPortal(\r\n        <ModalOverlay  onClose={onClose}>\r\n            <div className={`${ModalStyle.modalWrapper} pl-10 pt-10 pr-10 pb-15`}>\r\n                <section className={ModalStyle.header}>\r\n                    <p className=\"text text_type_main-large\">{header}</p> \r\n                    <span className='icon_close'><CloseIcon type=\"primary\" onClick={onClose}/></span>\r\n                </section>\r\n                {props.children}\r\n            </div>\r\n        </ModalOverlay>\r\n        ,\r\n        modalRoot\r\n      );\r\n};  \r\n\r\n\r\nexport default Modal;","\r\nexport default function checkResponse(res:Response) {\r\n    if (res.ok) {\r\n        return res.json()\r\n    }\r\n    return res.json() \r\n}","export const API_URL = 'https://norma.nomoreparties.space/api/';\r\nexport const WS_URL = 'wss://norma.nomoreparties.space/orders';\r\n\r\n","import { API_URL } from '../utils/constants';\r\n\r\nexport interface ICustomFetch{\r\n  endpoint: string;\r\n  method: string;\r\n  body?: any\r\n  header?: {} | {[name: string]: string}\r\n}\r\n\r\nexport const customFetch = ({endpoint, method=\"GET\", body=\"\", header={}}:ICustomFetch) =>{\r\n  if(method===\"GET\"){\r\n    return  fetch(`${API_URL}${endpoint}`, {\r\n      method: 'GET', \r\n      headers: header,\r\n    })\r\n  }else if(method===\"POST\" || method===\"PATCH\"){\r\n      return fetch(`${API_URL}${endpoint} `, {\r\n        method: method, \r\n        headers: header,\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n  }   \r\n  }\r\n","import { API_URL } from '../utils/constants';\r\nimport checkResponse from './checkResponse';\r\nimport { saveStateInLocalstorage, loadStateFromLocalstorage } from '../components/localstorage';\r\nimport {\r\n    userInfoRequestSuccess,\r\n    userInfoRequestFailed,\r\n    userInfoStatus\r\n} from './actions/user-info';\r\n\r\n\r\nexport function refreshToken() { \r\n    fetch(`${API_URL}auth/token`, {\r\n        method: 'POST', \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        body: JSON.stringify({\"token\": loadStateFromLocalstorage('refreshToken')})\r\n      })\r\n        .then(checkResponse)\r\n        .then( res => {\r\n          if (res && res.success) {\r\n            let authToken;\r\n            let refreshToken;\r\n            if(res.accessToken){\r\n            authToken = res.accessToken.split('Bearer ')[1];\r\n            refreshToken = res.refreshToken\r\n            }\r\n            if(authToken){\r\n              saveStateInLocalstorage('token', authToken);\r\n              saveStateInLocalstorage('refreshToken', refreshToken);\r\n              userInfoRequestSuccess(res.user)\r\n            }\r\n            return res\r\n      } else {\r\n        userInfoRequestFailed()\r\n        userInfoStatus(res.status)\r\n      }\r\n  }).catch( err => {\r\n      userInfoRequestFailed()\r\n      userInfoStatus(err.status)\r\n  })\r\n}\r\n\r\n   \r\n\r\n\r\n\r\n\r\n  \r\n","import { IUserInfo } from \"../types/data\";\r\nimport { AppThunk } from \"../types\";\r\nimport checkResponse from '../checkResponse';\r\nimport { customFetch } from '../custom-fetch';\r\nimport { refreshToken } from '../refresh-token';\r\nimport { loadStateFromLocalstorage } from '../../components/localstorage';\r\n\r\n\r\nexport const GET_USER_INFO: 'GET_USER_INFO' = 'GET_USER_INFO';\r\nexport const ADD_USER_INFO: 'ADD_USER_INFO' = 'ADD_USER_INFO';\r\nexport const USER_INFO_REQUEST_FAILED: 'USER_INFO_REQUEST_FAILED' = 'USER_INFO_REQUEST_FAILED';\r\nexport const USER_INFO_REQUEST_SUCCESS: 'USER_INFO_REQUEST_SUCCESS' = 'USER_INFO_REQUEST_SUCCESS';\r\nexport const RESET_USER_INFO: 'RESET_USER_INFO' = 'RESET_USER_INFO';\r\nexport const USER_INFO_STATUS: 'USER_INFO_STATUS' = 'USER_INFO_STATUS';\r\n\r\nexport interface IGetUserInfo {\r\n  readonly type: typeof GET_USER_INFO,\r\n  user: IUserInfo\r\n}\r\nexport interface IAddUserInfo {\r\n  readonly type: typeof GET_USER_INFO,\r\n  user: IUserInfo\r\n}\r\nexport interface IUserInfoRequestFailed {\r\n  readonly type: typeof USER_INFO_REQUEST_FAILED\r\n}\r\nexport interface IUserInfoRequestSuccess{\r\n  readonly type: typeof USER_INFO_REQUEST_SUCCESS\r\n  user: IUserInfo\r\n}\r\nexport interface IResetUserInfo{\r\n  readonly type: typeof RESET_USER_INFO\r\n  user: IUserInfo\r\n}\r\nexport interface IUserInfoStatus{\r\n  readonly type: typeof USER_INFO_STATUS\r\n  userInfoStatus: string\r\n}\r\n\r\n\r\n\r\n\r\nexport type TUserActions = \r\n    IGetUserInfo | \r\n    IAddUserInfo |\r\n    IUserInfoRequestFailed | \r\n    IUserInfoRequestSuccess |\r\n    IResetUserInfo |\r\n    IUserInfoStatus |\r\n    any;\r\n\r\n\r\nfunction getUserInfo(){\r\n    return {\r\n      type: GET_USER_INFO,\r\n    }\r\n}\r\n\r\nfunction addUserInfo(payload:IUserInfo | undefined) {\r\n   return {\r\n     type: ADD_USER_INFO,\r\n     payload\r\n   }\r\n}\r\n\r\nfunction userInfoRequestFailed() {\r\n  return {\r\n    type: USER_INFO_REQUEST_FAILED,\r\n  }\r\n}\r\n\r\nfunction userInfoRequestSuccess(payload:IUserInfo | undefined) {\r\n  return {\r\n    type: USER_INFO_REQUEST_SUCCESS,\r\n    payload\r\n  }\r\n}\r\n\r\nfunction resetUserInfo() {\r\n  return {\r\n    type: RESET_USER_INFO\r\n  }\r\n}\r\n\r\nfunction userInfoStatus(payload:string | undefined) {\r\n  return {\r\n    type: USER_INFO_STATUS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst getUserInfoApi: AppThunk = () => {\r\n  return function(dispatch){\r\n    dispatch(getUserInfo())\r\n    customFetch({\r\n      endpoint: \"auth/user\", \r\n      method: \"GET\",\r\n      body:  \"\" ,\r\n      header: {\r\n      'Content-Type': 'application/json',\r\n      'authorization': 'Bearer ' + loadStateFromLocalstorage('token')}})!\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n          dispatch(userInfoRequestSuccess(res.user))\r\n          dispatch(userInfoStatus(res.success))\r\n          return res\r\n    } else {\r\n        dispatch(userInfoRequestFailed())\r\n        dispatch(userInfoStatus(res.message))\r\n        if(res.message === \"jwt expired\" && loadStateFromLocalstorage('refreshToken')){\r\n          refreshToken()\r\n          customFetch({\r\n            endpoint: \"auth/user\", \r\n            method: \"GET\",\r\n            body:  \"\" ,\r\n            header: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': 'Bearer ' + loadStateFromLocalstorage('token')}})!\r\n          .then(checkResponse).then(\r\n            res => {\r\n              if (res && res.success) {\r\n                dispatch(userInfoRequestSuccess(res.user))\r\n                dispatch(userInfoStatus(res.success))\r\n                return res\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          dispatch(userInfoRequestFailed())\r\n          dispatch(userInfoStatus(res.message))}\r\n    }\r\n    }).catch( err => {\r\n        dispatch(userInfoRequestFailed())\r\n        dispatch(userInfoStatus(err.message))\r\n      })\r\n} \r\n}\r\n\r\n\r\nconst changeUserInfoApi:AppThunk = (data: IUserInfo) => {\r\n  return function(dispatch){\r\n    dispatch(getUserInfo())\r\n    customFetch({\r\n        endpoint: \"auth/user\", \r\n        method: \"PATCH\", \r\n        body: data, \r\n        header: {\r\n      'Content-Type': 'application/json',\r\n      'authorization': 'Bearer ' + loadStateFromLocalstorage('token')\r\n    }})!\r\n      .then(checkResponse)\r\n      .then( (res) => {\r\n        if (res && res.success) {\r\n          dispatch(userInfoRequestSuccess(res.user))\r\n          return res\r\n    } else {\r\n        dispatch(userInfoRequestFailed())\r\n        if(res.message === \"jwt expired\" && loadStateFromLocalstorage('refreshToken') ){\r\n          refreshToken()\r\n          customFetch({\r\n            endpoint: \"auth/user\", \r\n            method: \"PATCH\", \r\n            body: data, \r\n            header: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': 'Bearer ' + loadStateFromLocalstorage('token')\r\n        }})!\r\n          .then(checkResponse).then(\r\n            res => {\r\n              if (res && res.success) {\r\n                dispatch(userInfoRequestSuccess(res.user))\r\n                return res\r\n            }\r\n          })\r\n        }\r\n        else {return res}\r\n        \r\n    }\r\n    }).catch( err => {\r\n        dispatch(userInfoRequestFailed())\r\n        return\r\n      })\r\n} \r\n}\r\n\r\n\r\nexport {\r\n  getUserInfo,\r\n  addUserInfo,\r\n  userInfoRequestFailed,\r\n  userInfoRequestSuccess,\r\n  resetUserInfo,\r\n  userInfoStatus, \r\n  getUserInfoApi, \r\n  changeUserInfoApi\r\n}","\r\nimport { AppThunk } from '../types';\r\nimport checkResponse from '../checkResponse';\r\nimport { customFetch } from '../custom-fetch';\r\n\r\n\r\nexport const GET_RESET_PASSWORD_TOKEN_REQUEST: 'GET_RESET_PASSWORD_TOKEN_REQUEST' = 'GET_RESET_PASSWORD_TOKEN_REQUEST';\r\nexport const GET_RESET_PASSWORD_TOKEN_SUCCESS: 'GET_RESET_PASSWORD_TOKEN_SUCCESS' = 'GET_RESET_PASSWORD_TOKEN_SUCCESS';\r\nexport const GET_RESET_PASSWORD_TOKEN_FAILED: 'GET_RESET_PASSWORD_TOKEN_FAILED' = 'GET_RESET_PASSWORD_TOKEN_FAILED';\r\nexport const GET_RESET_PASSWORD_TOKEN_STATUS: 'GET_RESET_PASSWORD_TOKEN_STATUS' = 'GET_RESET_PASSWORD_TOKEN_STATUS';\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\nexport const RESET_PASSWORD_STATUS: 'RESET_PASSWORD_STATUS' = 'RESET_PASSWORD_STATUS';\r\n\r\n\r\nexport interface IGetResetPasswordTokenRequest{\r\n  readonly type: typeof GET_RESET_PASSWORD_TOKEN_REQUEST\r\n}\r\nexport interface IGetResetPasswordTokenFailed{\r\n  readonly type: typeof GET_RESET_PASSWORD_TOKEN_FAILED\r\n}\r\nexport interface IGetResetPasswordTokenSuccess{\r\n  readonly type: typeof GET_RESET_PASSWORD_TOKEN_SUCCESS\r\n}\r\nexport interface IGetResetPasswordTokenStatus{\r\n  readonly type: typeof GET_RESET_PASSWORD_TOKEN_STATUS;\r\n  getTokenStatus: string \r\n}\r\nexport interface IResetPasswordRequest{\r\n  readonly type: typeof RESET_PASSWORD_REQUEST\r\n}\r\nexport interface IResetPasswordFailed{\r\n  readonly type: typeof RESET_PASSWORD_FAILED\r\n}\r\nexport interface IResetPasswordSuccess{\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS\r\n}\r\nexport interface IResetPasswordStatus{\r\n  readonly type: typeof RESET_PASSWORD_STATUS;\r\n  resetPasswordStatus: string \r\n}\r\n\r\nexport type TPasswordActions = \r\n    IGetResetPasswordTokenRequest | \r\n    IGetResetPasswordTokenFailed |\r\n    IGetResetPasswordTokenSuccess | \r\n    IGetResetPasswordTokenStatus |\r\n    IResetPasswordRequest |\r\n    IResetPasswordFailed |\r\n    IResetPasswordSuccess |\r\n    IResetPasswordStatus |\r\n    any;\r\n\r\nfunction getResetPasswordTokenRequest() {\r\n    return {\r\n      type: GET_RESET_PASSWORD_TOKEN_REQUEST ,\r\n    }\r\n}\r\n\r\nfunction getResetPasswordTokenFailed() {\r\n    return {\r\n      type: GET_RESET_PASSWORD_TOKEN_FAILED,\r\n    }\r\n}\r\n\r\nfunction getResetPasswordTokenSuccess() {\r\n    return {\r\n      type: GET_RESET_PASSWORD_TOKEN_SUCCESS\r\n    }\r\n}\r\nfunction getResetPasswordTokenStatus(payload:string | undefined ) {\r\n  return {\r\n    type: GET_RESET_PASSWORD_TOKEN_STATUS,\r\n    payload\r\n  }\r\n}\r\nfunction resetPasswordRequest() {\r\n    return {\r\n      type: RESET_PASSWORD_REQUEST,\r\n    }\r\n}\r\n\r\nfunction resetPasswordFailed() {\r\n    return {\r\n      type: RESET_PASSWORD_FAILED,\r\n    }\r\n}\r\n\r\nfunction resetPasswordSuccess() {\r\n    return {\r\n      type: RESET_PASSWORD_SUCCESS\r\n    }\r\n}\r\n\r\nfunction resetPasswordStatus(payload: string | undefined) {\r\n  return {\r\n    type: RESET_PASSWORD_STATUS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst  resetPassword: AppThunk = (data: {\"password\": string; \"token\": string}) =>{\r\n  return function(dispatch){\r\n      dispatch(resetPasswordRequest())\r\n      customFetch({\r\n        endpoint: \"password-reset/reset\", \r\n        method: \"POST\", \r\n        body: data ,\r\n        header:{\r\n        'Content-Type': 'application/json'}})!\r\n        .then(checkResponse)\r\n        .then( res => {\r\n          if (res && res.success) {\r\n            dispatch(resetPasswordSuccess())\r\n            dispatch(resetPasswordStatus(res.message))\r\n            return res\r\n      } else throw Promise.reject(res.message)\r\n      }).catch( err => {\r\n          dispatch(resetPasswordFailed())\r\n          dispatch(resetPasswordStatus(err.message))\r\n          return err\r\n        })\r\n  } \r\n}\r\n\r\n\r\nconst getResetPasswordToken:AppThunk = (data: {email: string}) => {\r\n  return function(dispatch){\r\n      dispatch(getResetPasswordTokenRequest())\r\n      customFetch({\r\n        endpoint: \"password-reset\", \r\n        method: \"POST\", \r\n        body: data ,\r\n        header: {\r\n        'Content-Type': 'application/json'}})!\r\n        .then(checkResponse)\r\n        .then( res => {\r\n          if (res && res.success) {\r\n            dispatch(getResetPasswordTokenSuccess())\r\n            dispatch(getResetPasswordTokenStatus(res.message))\r\n            return res\r\n      } else throw Promise.reject(res.message)\r\n      }).catch( err => {\r\n          dispatch(getResetPasswordTokenFailed())\r\n          dispatch(getResetPasswordTokenStatus(err.message))\r\n          return err\r\n        })\r\n  } \r\n}\r\n\r\n\r\n\r\nexport {\r\n    getResetPasswordTokenRequest,\r\n    getResetPasswordTokenFailed,\r\n    getResetPasswordTokenSuccess,\r\n    getResetPasswordTokenStatus,\r\n    resetPasswordRequest,\r\n    resetPasswordFailed,\r\n    resetPasswordSuccess, \r\n    resetPasswordStatus,\r\n    resetPassword, \r\n    getResetPasswordToken\r\n}","import React, {ChangeEvent, useEffect} from \"react\";\r\nimport { useHistory, Link, Redirect } from 'react-router-dom';\r\nimport { Input, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getUserInfoApi } from \"../services/actions/user-info\";\r\nimport { getResetPasswordToken } from \"../services/actions/password\";\r\nimport { getResetPasswordTokenStatus } from \"../services/actions/password\";\r\nimport { TRootState } from \"../services/types\";\r\nimport { useAppSelector, useDispatch } from \"../services/hooks\";\r\n\r\n\r\nimport styles from './common.module.css';\r\n\r\n\r\nexport function ForgotPasswordPage() {\r\n    const getTokenStatusText = useAppSelector((state:TRootState)=> state.password.getTokenStatus)\r\n    const { userInfo, userInfoRequest } = useAppSelector((state:TRootState) => state.userInfo)\r\n    const [value, setValue] = React.useState('');\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        //получить данные о пользователе \r\n        const init =  () => {\r\n            // Вызовем запрос getUser и изменим состояние isUserLoaded\r\n            dispatch(getUserInfoApi());\r\n        };\r\n        // При монтировании компонента запросим данные о пользователе\r\n        init();\r\n    }, [dispatch]);\r\n  \r\n    const onIconClick = () => {\r\n        setTimeout(() => inputRef?.current?.focus(), 0)\r\n    }\r\n\r\n    const onForgotPassword = (e: ChangeEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(getResetPasswordToken({\"email\": value}))\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(getTokenStatusText === \"Reset email sent\"){\r\n            setValue(\"\")\r\n            dispatch(getResetPasswordTokenStatus(\"\"))\r\n        history.replace({ pathname: '/reset-password' , state: { fromForgotPassword: true }});\r\n        \r\n    }\r\n    },[getTokenStatusText, dispatch, history])\r\n\r\n    \r\n\r\n    if (userInfoRequest && userInfo && !userInfo.name) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        userInfo && !userInfo.name ?\r\n        <>\r\n            <main  className={styles.main}>\r\n                <div className={styles.container}>\r\n                    <p className={`text text_type_main-medium mb-6`}>Восстановление пароля</p>\r\n                    <form className={`${styles.form} mb-20`} onSubmit={onForgotPassword} >\r\n                        <Input \r\n                        type={'email'}\r\n                        placeholder={'Укажите e-mail'}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        value={value}\r\n                        error={false}\r\n                        ref={inputRef}\r\n                        onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Восстановить\r\n                        </Button>\r\n                    </form>\r\n                    <div className={` text text_type_main-default text_color_inactive ${styles.disclaimer} mb-4`} >Вспомнили пароль?  <Link to='/login'><Button type=\"secondary\" size=\"medium\">Войти</Button></Link></div>\r\n                </div>\r\n            </main>\r\n        </>\r\n     :   <Redirect  to={\"/\"}/> )\r\n}","import { IDataApi } from \"../reducers/data-api\";\r\nimport { IIngredient } from \"../types/data\";\r\nimport { AppThunk } from \"../types\";\r\nimport { API_URL } from '../../utils/constants';\r\nimport checkResponse from '../checkResponse';\r\nimport { getSelectedIngredient } from \"./selected-ingredient\";\r\n\r\nexport const GET_DATA_API: 'GET_DATA_API' = 'GET_DATA_API';\r\nexport const GET_DATA_API_FAILED: 'GET_DATA_API_FAILED' = 'GET_DATA_API_FAILED';\r\nexport const GET_DATA_API_SUCCESS: 'GET_DATA_API_SUCCESS' = 'GET_DATA_API_SUCCESS';\r\nexport const SET_DATA_API: 'SET_DATA_API'= 'SET_DATA_API';\r\n\r\nexport interface IGetDataApi{\r\n  readonly type: typeof GET_DATA_API\r\n}\r\nexport interface IGetDataApiFailed{\r\n  readonly type: typeof GET_DATA_API_FAILED\r\n}\r\nexport interface IGetDataApiSuccess{\r\n  readonly type: typeof GET_DATA_API_SUCCESS\r\n  dataApi: Array<IIngredient>\r\n}\r\nexport interface ISetDataApi{\r\n  readonly type: typeof SET_DATA_API\r\n  dataApi: Array<IIngredient>\r\n}\r\n\r\nexport type TDataApiActions = \r\n    IGetDataApi | \r\n    IGetDataApiFailed |\r\n    IGetDataApiSuccess | \r\n    ISetDataApi |\r\n    any;\r\n\r\nfunction getDataApi() {\r\n    return {\r\n      type: GET_DATA_API\r\n    }\r\n}\r\n\r\nfunction getDataApiFailed() {\r\n    return {\r\n      type: GET_DATA_API_FAILED,\r\n    }\r\n}\r\n\r\nfunction getDataApiSuccess(payload:IDataApi) {\r\n    return {\r\n      type: GET_DATA_API_SUCCESS,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction setDataApi(payload: IIngredient[]) {\r\n    return {\r\n      type: SET_DATA_API,\r\n      payload\r\n    }\r\n}\r\n\r\n\r\nconst getIngredientsApi:AppThunk = (endpoint:string) => {\r\n  return function(dispatch) {\r\n    dispatch(getDataApi())\r\n    fetch(`${API_URL}${endpoint}`)\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n        dispatch(getDataApiSuccess(res.data))\r\n    } else {\r\n        dispatch(getDataApiFailed())\r\n    }\r\n}).catch( err => {\r\n    dispatch(getDataApiFailed())\r\n})\r\n}\r\n} \r\n\r\nconst  getIngredientsAndCurrent: AppThunk  = (id:string) => {\r\n  return function(dispatch) {\r\n    dispatch(getDataApi())\r\n    fetch(`${API_URL}ingredients`)\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n        dispatch(getDataApiSuccess(res.data))\r\n        return res\r\n    } else {\r\n        dispatch(getDataApiFailed())\r\n    }\r\n   }).then(res => {\r\n     console.log(res)\r\n     const currentIngredient =  res?.data.filter((item:IIngredient) => {return item._id === id});\r\n     dispatch(getSelectedIngredient(currentIngredient[0]))\r\n   }\r\n).catch( err => {\r\n    dispatch(getDataApiFailed())\r\n})\r\n}\r\n} \r\n\r\n\r\nexport {\r\n    getDataApi,\r\n    getDataApiFailed,\r\n    getDataApiSuccess,\r\n    setDataApi, \r\n    getIngredientsApi, \r\n    getIngredientsAndCurrent\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAppSelector, useDispatch } from \"../../services/hooks\";\r\n\r\nimport StyleIngredient from './ingredient.module.css';\r\nimport { getIngredientsAndCurrent } from \"../../services/actions/data-api\";\r\n\r\nexport function IngredientPage(){\r\n    const {selectedIngredient } = useAppSelector(state=> ({selectedIngredient: state.selectedIngredient}));\r\n    const { ingredientId }: {[name: string] : string} = useParams()\r\n    const dispatch = useDispatch(); \r\n\r\n    //запрос ингридиентов с API\r\n    React.useEffect(()=> {\r\n        dispatch(getIngredientsAndCurrent(ingredientId));\r\n    }, [dispatch, ingredientId])\r\n\r\n    return (selectedIngredient ?  <>\r\n        <main>\r\n            <section className={`${StyleIngredient.wrapper}`}>\r\n                <div className={StyleIngredient.card}>\r\n                    <img src={selectedIngredient!.image_large} alt={selectedIngredient!.name} className={`mr-4`}/>\r\n                    <p className={`text text_type_main-medium mb-4`}>\r\n                    {selectedIngredient!.name}</p>\r\n                    <p className=\"text text_type_main-small mb-4\">\r\n                        Превосходные котлеты из марсианской Магнолии для фирменных космических бургеров, набирающий популярность по всей вселенной\r\n                    </p>\r\n                    <ul className={`${StyleIngredient.modalProps} pl-1 mt-8`}>\r\n                        <li className={`mr-5`}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Калории,ккал</p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">{selectedIngredient!.calories}</p>\r\n                        </li >\r\n                        <li className={`mr-5`}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Белки, г</p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">{selectedIngredient!.proteins}</p>\r\n                        </li>\r\n                        <li className={`mr-5`}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Жиры, г</p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">{selectedIngredient!.fat}</p>\r\n                        </li>\r\n                        <li>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Углеводы, г</p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">{selectedIngredient!.carbohydrates}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </section>\r\n        </main> </>: <></> \r\n     )\r\n}\r\n\r\n\r\n\r\n","import { API_URL } from '../../utils/constants';\r\nimport checkResponse from '../checkResponse';\r\nimport { saveStateInLocalstorage } from '../../components/localstorage';\r\nimport { addUserInfo } from './user-info'\r\nimport { AppThunk } from '../types';\r\n\r\nexport const GET_USER_LOGIN: 'GET_USER_LOGIN' = 'GET_USER_LOGIN';\r\nexport const GET_USER_LOGIN_FAILED: 'GET_USER_LOGIN_FAILED' = 'GET_USER_LOGIN_FAILED';\r\nexport const GET_USER_LOGIN_SUCCESS: 'GET_USER_LOGIN_SUCCESS' = 'GET_USER_LOGIN_SUCCESS';\r\n\r\nexport interface IGetUserLogin{\r\n  readonly type: typeof GET_USER_LOGIN;\r\n}\r\nexport interface IGetUserLoginFailed{\r\n  readonly type: typeof GET_USER_LOGIN_FAILED;\r\n}\r\nexport interface IGetUserLoginSuccess{\r\n  readonly type: typeof GET_USER_LOGIN_SUCCESS;\r\n}\r\n\r\nexport type TUserLoginActions = \r\n    IGetUserLogin|\r\n    IGetUserLoginFailed |\r\n    IGetUserLoginSuccess |\r\n    any;\r\n\r\n\r\nfunction getUserLogin() {\r\n    return {\r\n      type: GET_USER_LOGIN\r\n    }\r\n}\r\n\r\nfunction getUserLoginFailed() {\r\n    return {\r\n      type: GET_USER_LOGIN_FAILED,\r\n    }\r\n}\r\n\r\nfunction getUserLoginSuccess() {\r\n    return {\r\n      type: GET_USER_LOGIN_SUCCESS,\r\n    }\r\n}\r\n\r\nconst userLoginRequest: AppThunk = (endpoint:string, body:any) => {\r\n  return function(dispatch) {\r\n    dispatch(getUserLogin())\r\n    fetch(`${API_URL}${endpoint}`, {\r\n      method: 'POST', \r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n          let authToken;\r\n          let refreshToken;\r\n          if(res.accessToken){\r\n          authToken = res.accessToken.split('Bearer ')[1];\r\n          refreshToken = res.refreshToken\r\n          }\r\n          if(authToken){\r\n            saveStateInLocalstorage('token', authToken);\r\n            saveStateInLocalstorage('refreshToken', refreshToken);\r\n            dispatch(addUserInfo(res.user))\r\n          }\r\n          \r\n    } else {\r\n        dispatch(getUserLoginFailed())\r\n    }\r\n}).catch( err => {\r\n    dispatch(getUserLoginFailed())\r\n})\r\n}\r\n} \r\n\r\n\r\n\r\n\r\nexport {\r\n    getUserLogin,\r\n    getUserLoginFailed,\r\n    getUserLoginSuccess, \r\n    userLoginRequest\r\n}","import React, {  useEffect,useCallback, ChangeEvent, KeyboardEvent } from \"react\";\r\nimport { useHistory,  Redirect, Link } from 'react-router-dom';\r\nimport { PasswordInput, Input, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { userLoginRequest } from \"../services/actions/user-login\";\r\nimport { getUserInfoApi } from \"../services/actions/user-info\";\r\nimport { ILocationState } from \"../services/types/data\";\r\nimport { useAppSelector, useDispatch } from \"../services/hooks\";\r\n\r\nimport styles from './common.module.css';\r\n\r\nexport function LoginPage()  {\r\n    const { userInfo, userInfoRequest } = useAppSelector(state => state.userInfo)\r\n    const [password, setPassword] = React.useState<string>('');\r\n    const [email, setEmail] = React.useState<string>('');\r\n    const [lastPage, setLastPage] = React.useState<string | undefined>('');\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const state = history.location.state as ILocationState\r\n    \r\n \r\n    let { from } = state || { from: { pathname: \"/\" } };\r\n\r\n    useEffect(() => {\r\n        //получить данные о пользователе \r\n        const init =  () => {\r\n            // Вызовем запрос getUser и изменим состояние isUserLoaded\r\n            dispatch(getUserInfoApi());\r\n        };\r\n        // При монтировании компонента запросим данные о пользователе\r\n        init();\r\n    }, [dispatch]);\r\n\r\n\r\n    //запрос к API, авторизация\r\n    const onLogin =  useCallback(\r\n        (e: KeyboardEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); \r\n        let body = {\r\n            \"email\": email, \r\n            \"password\": password, \r\n        }\r\n        dispatch(userLoginRequest(\"auth/login\", body))   \r\n    },[email, password, dispatch])\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n  \r\n    const onIconClick = () => {\r\n        setTimeout(() => inputRef.current?.focus(), 0)\r\n    }\r\n\r\n    \r\n    useEffect(()=> {\r\n        if(history.location.state){\r\n            setLastPage(lastPage)\r\n        }\r\n    }, [history.location.state, lastPage] )\r\n\r\n    if (userInfoRequest && !userInfo.name   ) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        !userInfo.name ?\r\n        <>\r\n            <main  className={styles.main}>\r\n                <div className={styles.container}>\r\n                    <p className={`text text_type_main-medium mb-6`}>Вход</p>\r\n                    <form className={`${styles.form} mb-20`} onSubmit={onLogin}>\r\n                        <Input \r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        value={email}\r\n                        error={false}\r\n                        ref={inputRef}\r\n                        onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                        <PasswordInput  onChange={onChange} value={password} name={'Пароль'}  />\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Войти\r\n                        </Button>\r\n                    </form>\r\n                    <div className={` text text_type_main-default text_color_inactive ${styles.disclaimer} mb-4`} >Вы — новый пользователь?  <Link to='/register'><Button type=\"secondary\" size=\"medium\">Зарегистрироваться</Button></Link></div>\r\n                    <span className={` text text_type_main-default text_color_inactive ${styles.disclaimer} `}>Забыли пароль?  <Link to='/forgot-password'> <Button type=\"secondary\" size=\"medium\" >Восстановить пароль</Button></Link> </span>\r\n                </div>\r\n            </main>\r\n        </>\r\n        \r\n  :  <Redirect to={from}/> )\r\n  \r\n}","import styleIngredientCard from './ingredient-card.module.css';\r\nimport {Counter, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport {useLocation, Link} from \"react-router-dom\";\r\nimport { IIngredient } from '../../services/types/data';\r\n\r\nconst IngredientCard = ({card}: {card: IIngredient}) => {\r\n\r\n    const location = useLocation();\r\n    const ingredientId = card['_id'];\r\n\r\n    const [ { isDragging }  , drag] = useDrag({\r\n        type: 'constructor',\r\n        item: { card: card },\r\n        collect: monitor => ({\r\n          isDragging: monitor.isDragging()\r\n        })\r\n      });\r\n\r\n    const opacity = isDragging ? 0.4 : 1;\r\n\r\n    return (\r\n        <li\r\n            data-id={card._id}\r\n            data-cypress=\"ingredient\"\r\n            className={`${styleIngredientCard.ingedientCard} mr-4 mt-5 mb-10`}\r\n            style={{ opacity }}\r\n            ref={drag}\r\n            >\r\n              <Link\r\n                key={ingredientId}\r\n                to={{\r\n                  pathname: `/ingredients/${ingredientId}`,\r\n                  state: { background: location },\r\n                }}\r\n                className={`${styleIngredientCard.ingedientCard} `}\r\n              >\r\n                <img src={card.image} alt={card.name} className={`mr-4`} />\r\n                {card.counter && card.counter > 0 ? <Counter count={card.counter } size=\"default\" /> : \"\"}\r\n                <div className={`${styleIngredientCard.priceWrapper} mt-1`} >\r\n                    <p className={`text text_type_digits-default mt-1 mr-2` } >{card.price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <p className={`${styleIngredientCard.titleCard} text text_type_main-default  mt-1`}>{card.name}</p>\r\n                </Link>\r\n        </li>\r\n      );\r\n};\r\n\r\n\r\nexport default IngredientCard;","import React, { RefObject, useRef } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styleBurgerIngredient from './burger-ingredients.module.css';\r\nimport IngredientCard from '../ingredient-card/ingredient-card';\r\nimport { getIngredientsApi } from '../../services/actions/data-api';\r\nimport { useAppSelector, useDispatch } from '../../services/hooks';\r\n\r\n\r\n\r\nconst BurgerIngredients = () => {\r\n    const { dataApiRequest, dataApiFailed, dataApi } = useAppSelector(state => state.dataApiReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    //запрос ингридиентов с API\r\n    React.useEffect(()=> {\r\n        if(dataApi.length < 1) {dispatch(getIngredientsApi(\"ingredients\"))}\r\n    }, [dispatch, dataApi.length])\r\n\r\n    //табы\r\n    const [current, setCurrent] = React.useState('Булки');\r\n    const tabsName: string[] = [\"Булки\", \"Начинки\", \"Соусы\"];\r\n\r\n    const refTitle = useRef<HTMLInputElement>(null);\r\n    const refBun = useRef<HTMLInputElement>(null);\r\n    const refMain = useRef<HTMLInputElement>(null);\r\n    const reSauce = useRef<HTMLInputElement>(null); \r\n\r\n    const changeTab = (e: string) => {\r\n        setCurrent(e)\r\n        if(refMain && e === \"Начинки\"){\r\n            refMain.current?.scrollIntoView({ behavior: \"smooth\"});\r\n        }else if (refMain && e === \"Соусы\"){\r\n            reSauce.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }else if(refMain && e === \"Булки\"){\r\n            refBun.current?.scrollIntoView({ behavior: \"smooth\"});\r\n        }\r\n\r\n    }\r\n   \r\n    const getTabs = tabsName.map(tab => \r\n            <Tab key={tab} value={tab} active={current === tab} onClick={changeTab}>\r\n                <p className=\"text text_type_main-default\">\r\n                        {tab}\r\n                </p>\r\n            </Tab>\r\n    );\r\n\r\n    //переключать табы при прокрутке \r\n     \r\n    \r\n    const getScroll = () => {\r\n        const topTitle = refTitle.current?.getBoundingClientRect().top\r\n        if(topTitle){\r\n            if(refBun.current && refBun.current.getBoundingClientRect().top > topTitle && refBun.current.getBoundingClientRect().top < topTitle + 200 ){\r\n                setCurrent(\"Булки\")\r\n            }else if(refMain.current && refMain.current.getBoundingClientRect().top > topTitle && refMain.current.getBoundingClientRect().top < topTitle + 200 ){\r\n                setCurrent(\"Начинки\")\r\n            }else if(refMain.current && refMain.current.getBoundingClientRect().top > topTitle + 400 ){\r\n                setCurrent(\"Булки\")\r\n            }\r\n            else if(reSauce.current && reSauce.current.getBoundingClientRect().top > topTitle && reSauce.current.getBoundingClientRect().top < topTitle + 200 ){\r\n                setCurrent(\"Соусы\")\r\n            } else if(reSauce.current && reSauce.current.getBoundingClientRect().top > topTitle + 400){\r\n                setCurrent(\"Начинки\")\r\n            }\r\n        } \r\n       \r\n        \r\n    };\r\n\r\n\r\n    //верстка_блоки с ингрединтами\r\n    const blockIngredientsType = (pKey:string, ulKey:string, name:string, refName: RefObject<HTMLInputElement>) => {\r\n        const category = dataApi.filter(item => {return item.type === pKey});\r\n        return(\r\n            <>\r\n                <p key={pKey} className=\"text text_type_main-medium\" ref={refName} >{name}</p> \r\n                <ul key={ulKey} className={`${styleBurgerIngredient.ingedientType} pl-1`} >\r\n                    {category.map(card =>(                         \r\n                        <IngredientCard card={card}  key={`${card._id}`} />\r\n                        ))}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //отрисовать данные по итогу запроса к API\r\n    const getIngedients = () => {\r\n        if (dataApiFailed) {\r\n            return <p>Произошла ошибка при получении данных</p>\r\n        } else if (dataApiRequest) { \r\n            return <p>Загрузка...</p>\r\n        } else {\r\n            return (\r\n                <> \r\n                {blockIngredientsType(\"bun\", \"bunList\", \"Булки\", refBun)}\r\n                {blockIngredientsType(\"main\", \"mainList\", \"Начинки\", refMain )}\r\n                {blockIngredientsType(\"sauce\", \"sauceList\", \"Соусы\", reSauce)}\r\n                </>\r\n            )  \r\n        }\r\n    }\r\n\r\n    const ingredient = getIngedients()\r\n\r\n    return(\r\n        <section className={`${styleBurgerIngredient.wrapper} mt-10 mb-10 mr-10`}>\r\n            <p className=\"text text_type_main-large mt-40\" > Соберите бургер</p>\r\n            <div className={`${styleBurgerIngredient.tabsWrapper}  mt-5`} ref={refTitle} >\r\n                {getTabs}\r\n            </div>\r\n            <div className={`${styleBurgerIngredient.ingedientCardContainer} mt-10`} onScroll={getScroll} >                \r\n               {ingredient}\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n};  \r\n\r\n\r\nexport default BurgerIngredients;\r\n","import { CheckMarkIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useAppSelector } from '../../services/hooks';\r\n\r\nconst OrderDetails =  () => {\r\n    const  orderNumber  = useAppSelector((state) => state.orderNumber.orderNumber);\r\n    return(\r\n        <>\r\n            <p className=\"text text_type_digits-large\">{orderNumber}</p> \r\n            <p className=\"text text_type_main-medium mt-8 mb-15\">идентификатор заказа</p>\r\n            <CheckMarkIcon type=\"primary\" />\r\n            <p className=\"text text_type_main-default mt-15\">Ваш заказ начали готовить</p>\r\n            <p className=\"text text_type_main-default text_color_inactive mt-2\">Дождитесь готовности на орбитальной станции</p>\r\n        </>\r\n    )\r\n};  \r\n\r\n\r\nexport default OrderDetails;","import  { memo } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport {ConstructorElement, DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IIngredient } from '../../services/types/data';\r\n\r\ninterface IIngredientCardConstructor{\r\n    ingredient: IIngredient;\r\n    onDeleteIngredient: (key: string, _id: string ) => void;\r\n    id: string;\r\n    moveCard: (droppedId: string, originalIndex: number) => void;\r\n    findCard: (id: string) => {\r\n        index: number\r\n    }\r\n}\r\n\r\nexport const IngrediendCardConstructor = memo(function IngrediendCardConstructor({ingredient, onDeleteIngredient, id, moveCard, findCard}:IIngredientCardConstructor) {      \r\n    const originalIndex = findCard(id).index; \r\n\r\n    const [{ isDragging }, dragSort] = useDrag(() => ({\r\n        type: \"sorting\",\r\n        item: { id, originalIndex },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n        end: (item, monitor) => {\r\n            const { id: droppedId, originalIndex } = item;\r\n            const didDrop = monitor.didDrop();\r\n            if (!didDrop) {\r\n                moveCard(droppedId, originalIndex);\r\n            }\r\n        },\r\n    }), [id, originalIndex, moveCard]);\r\n\r\n\r\n    const [, dropSort] = useDrop(() => ({\r\n        accept: \"sorting\",\r\n        hover( {id: draggedId}:{id: string} ) {\r\n            if (draggedId !== id) {\r\n                const { index: overIndex } = findCard(id);\r\n                moveCard(draggedId, overIndex);\r\n                }\r\n        },\r\n    }), [findCard, moveCard]);\r\n    \r\n    const opacity = isDragging ? 0 : 1;\r\n    \r\n    return(\r\n        <li  ref={(node) =>{dragSort(dropSort(node))}} style={{ cursor: \"move\", opacity }} className=\"mr-4\"  >\r\n             <DragIcon type=\"primary\"/>\r\n             <ConstructorElement\r\n             isLocked={false}\r\n             text={`${ingredient.name}`}\r\n             price={ingredient.price}\r\n             thumbnail={ingredient.image}\r\n             handleClose={() => onDeleteIngredient(ingredient.key, ingredient._id )}\r\n             />\r\n         </li>\r\n     )    \r\n})","\r\nimport { AppThunk } from '../types';\r\nimport { loadStateFromLocalstorage } from '../../components/localstorage';\r\nimport { API_URL } from '../../utils/constants';\r\nimport checkResponse from '../checkResponse';\r\n\r\nexport const GET_ORDER_API: 'GET_ORDER_API' = 'GET_ORDER_API';\r\nexport const GET_ORDER_API_FAILED: 'GET_ORDER_API_FAILED' =  'GET_ORDER_API_FAILED';\r\nexport const GET_ORDER_API_SUCCESS: 'GET_ORDER_API_SUCCESS' = 'GET_ORDER_API_SUCCESS';\r\nexport const RESET_ORDER: 'RESET_ORDER'= 'RESET_ORDER';\r\n\r\nexport interface IGetOrderApi{\r\n  readonly type: typeof GET_ORDER_API\r\n}\r\nexport interface IGetOrderFailed{\r\n  readonly type: typeof GET_ORDER_API_FAILED\r\n}\r\nexport interface IGetOrderSuccess{\r\n  readonly type: typeof GET_ORDER_API_SUCCESS;\r\n  orderNumber: string\r\n}\r\nexport interface IResetOrder{\r\n  readonly type: typeof GET_ORDER_API_SUCCESS\r\n}\r\n\r\nexport type TOrderNumberActions = \r\n    IGetOrderApi | \r\n    IGetOrderFailed |\r\n    IGetOrderSuccess | \r\n    IResetOrder |\r\n    any;\r\n\r\nfunction getOrderApi() {\r\n    return {\r\n      type: GET_ORDER_API \r\n    }\r\n}\r\n\r\nfunction getOrderFailed() {\r\n    return {\r\n      type: GET_ORDER_API_FAILED,\r\n    }\r\n}\r\n\r\nfunction getOrderSuccess(payload: string) {\r\n    return {\r\n      type: GET_ORDER_API_SUCCESS,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction resetOrder() {\r\n    return {\r\n      type: RESET_ORDER,\r\n    }\r\n}\r\n\r\nconst getOrder:AppThunk = (endpoint:string, data:Array<string>) => {\r\n  return function(dispatch) {\r\n    dispatch(getOrderApi())\r\n    fetch(`${API_URL}${endpoint}`, { \r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json;charset=utf-8',\r\n                  'Authorization': 'Bearer ' + loadStateFromLocalstorage('token')\r\n                  },\r\n              body: JSON.stringify({ \r\n                  \"ingredients\": data\r\n              }) \r\n              })\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n        dispatch(getOrderSuccess(res.order!.number))\r\n        return res\r\n    } else {\r\n        dispatch(getOrderFailed())\r\n        return res\r\n    }\r\n}).catch( err => {\r\n     dispatch(getOrderFailed())\r\n     return err\r\n})\r\n}\r\n} \r\n\r\nexport {\r\n    getOrderApi,\r\n    getOrderFailed,\r\n    getOrderSuccess,\r\n    resetOrder, \r\n    getOrder\r\n}","import { IIngredient } from \"../types/data\";\r\n\r\nexport const GET_INGREDIENTS_CONSTRUCTOR_BUN: 'GET_INGREDIENTS_CONSTRUCTOR_BUN' = 'GET_INGREDIENTS_CONSTRUCTOR_BUN';\r\nexport const GET_INGREDIENTS_CONSTRUCTOR_MAIN: 'GET_INGREDIENTS_CONSTRUCTOR_MAIN' = 'GET_INGREDIENTS_CONSTRUCTOR_MAIN';\r\nexport const ADD_INGREDIENTS_CONSTRUCTOR_MAIN: \"ADD_INGREDIENTS_CONSTRUCTOR_MAIN\" =\"ADD_INGREDIENTS_CONSTRUCTOR_MAIN\";\r\nexport const RESET_INGREDIENTS_CONSTRUCTOR: \"RESET_INGREDIENTS_CONSTRUCTOR\" =\"RESET_INGREDIENTS_CONSTRUCTOR\";\r\nexport const SORT_INGREDIENTS_CONSTRUCTOR: \"SORT_INGREDIENTS_CONSTRUCTOR\" =\"SORT_INGREDIENTS_CONSTRUCTOR\";\r\n\r\nexport interface IGetIngredientsConstructorBun{\r\n  readonly type: typeof GET_INGREDIENTS_CONSTRUCTOR_BUN\r\n  bun: Array<IIngredient>\r\n}\r\nexport interface IGetIngredientsConstructorMain{\r\n  readonly type: typeof GET_INGREDIENTS_CONSTRUCTOR_MAIN\r\n  main: Array<IIngredient>\r\n}\r\nexport interface IAddIngredientsConstructorMain{\r\n  readonly type: typeof ADD_INGREDIENTS_CONSTRUCTOR_MAIN\r\n  main: IIngredient\r\n}\r\nexport interface IResetIngredientsConstructor{\r\n  readonly type: typeof RESET_INGREDIENTS_CONSTRUCTOR\r\n}\r\nexport interface ISortIngredientsConstructor{\r\n  readonly type: typeof SORT_INGREDIENTS_CONSTRUCTOR;\r\n  main: IIngredient[]\r\n}\r\n\r\nexport type TConstructorListActions = \r\n    IGetIngredientsConstructorBun | \r\n    IGetIngredientsConstructorMain |\r\n    IAddIngredientsConstructorMain | \r\n    IResetIngredientsConstructor |\r\n    ISortIngredientsConstructor |\r\n    any;\r\n\r\n\r\n\r\nfunction getIngredientsConstructorBun(payload:IIngredient) {\r\n    return {\r\n      type: GET_INGREDIENTS_CONSTRUCTOR_BUN,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction getIngredientsConstructorMain(payload:IIngredient[]) {\r\n    return {\r\n      type: GET_INGREDIENTS_CONSTRUCTOR_MAIN,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction addIngredientsConstructorMain(payload:IIngredient) {\r\n    return {\r\n      type: ADD_INGREDIENTS_CONSTRUCTOR_MAIN,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction resetIngredientsConstructor() {\r\n    return {\r\n      type: RESET_INGREDIENTS_CONSTRUCTOR\r\n    }\r\n}\r\n\r\nfunction sortIngredientsConstructor(payload:IIngredient[]) {\r\n    return {\r\n      type: SORT_INGREDIENTS_CONSTRUCTOR,\r\n      payload\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    getIngredientsConstructorBun, \r\n    getIngredientsConstructorMain, \r\n    addIngredientsConstructorMain,\r\n    resetIngredientsConstructor,\r\n    sortIngredientsConstructor }","import SpinnerStyle  from './spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n\r\n    const layer1 = (<svg width=\"68\" height=\"66\" viewBox=\"0 0 68 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M24.9249 2.91091C30.3362 -0.970307 37.6638 -0.970302 43.0751 2.91092L61.6345 16.2224C67.0459 20.1036 69.3102 26.9832 67.2433 33.2632L60.1542 54.8016C58.0873 61.0815 52.1592 65.3333 45.4703 65.3333H22.5296C15.8408 65.3333 9.91274 61.0815 7.84578 54.8016L0.756717 33.2632C-1.31024 26.9832 0.954096 20.1036 6.36546 16.2224L24.9249 2.91091Z\" fill=\"url(#paint0_radial_45627_888)\" fillOpacity=\"0.25\"/>\r\n    <defs>\r\n    <radialGradient id=\"paint0_radial_45627_888\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(34 32.6667) rotate(136.146) scale(47.1499 35.4679)\">\r\n    <stop stopColor=\"#801AB3\" stopOpacity=\"0\"/>\r\n    <stop offset=\"1\" stopColor=\"#4C4CFF\" stopOpacity=\"0.5\"/>\r\n    </radialGradient>\r\n    </defs>\r\n    </svg> )\r\n\r\n    const layer2 = (<svg width=\"107\" height=\"100\" viewBox=\"0 0 107 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M103.944 38.453C108.019 45.5983 108.019 54.4017 103.944 61.547L88.5996 88.453C84.5247 95.5983 76.994 100 68.8442 100H38.1558C30.006 100 22.4753 95.5983 18.4004 88.453L3.05617 61.547C-1.01872 54.4017 -1.01872 45.5983 3.05617 38.453L18.4004 11.547C22.4753 4.40169 30.006 0 38.1558 0L68.8442 0C76.994 0 84.5247 4.40169 88.5996 11.547L103.944 38.453Z\" fill=\"url(#paint0_radial_45627_887)\" fillOpacity=\"0.25\"/>\r\n    <defs>\r\n    <radialGradient id=\"paint0_radial_45627_887\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(53.5 50) rotate(-43.0632) scale(73.2274 55.0025)\">\r\n    <stop stopColor=\"#801AB3\" stopOpacity=\"0\"/>\r\n    <stop offset=\"1\" stopColor=\"#4C4CFF\"/>\r\n    </radialGradient>\r\n    </defs>\r\n    </svg>)\r\n\r\n    const layer3 = <svg width=\"98\" height=\"102\" viewBox=\"0 0 98 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.36637 37.3873C-1.45546 45.5044 -1.45545 56.4957 4.36637 64.6127L24.3336 92.4518C30.1554 100.569 40.4748 103.965 49.8947 100.865L82.2023 90.2313C91.6223 87.1309 98 78.2387 98 68.2055V33.7945C98 23.7612 91.6222 14.8691 82.2023 11.7687L49.8947 1.13508C40.4748 -1.96536 30.1554 1.43114 24.3336 9.54819L4.36637 37.3873Z\" fill=\"url(#paint0_radial_45627_886)\" fillOpacity=\"0.25\"/>\r\n    <defs>\r\n    <radialGradient id=\"paint0_radial_45627_886\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(49 51) rotate(-46.1458) scale(70.7248 53.2019)\">\r\n    <stop stopColor=\"#801AB3\" stopOpacity=\"0\"/>\r\n    <stop offset=\"1\" stopColor=\"#4C4CFF\"/>\r\n    </radialGradient>\r\n    </defs>\r\n    </svg>\r\n    \r\n\r\n    return(\r\n        <>\r\n        <div className={SpinnerStyle.iconWrapper} >\r\n            <span>{layer3}</span>\r\n            <span>{layer2}</span>\r\n            <span>{layer1}</span>  \r\n        </div>\r\n        <p className={`text_type_main-medium` }>Загрузка</p>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Spinner","import React, { useCallback, memo, useEffect, useState} from 'react';\r\nimport {ConstructorElement, CurrencyIcon, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport  { v4 as uuidv4 } from 'uuid';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { IngrediendCardConstructor } from '../ingrediend-card-constructor/ingrediend-card-constructor';\r\nimport update from 'immutability-helper';\r\nimport { getOrder } from '../../services/actions/order-number';\r\nimport { getIngredientsConstructorBun, \r\n        getIngredientsConstructorMain, \r\n        addIngredientsConstructorMain,\r\n        resetIngredientsConstructor,\r\n        sortIngredientsConstructor  } from '../../services/actions/constructor-list';\r\nimport { setDataApi } from '../../services/actions/data-api';\r\nimport { resetOrder } from '../../services/actions/order-number';\r\nimport Spinner from '../spinner/spinner';\r\nimport { useAppSelector, useDispatch } from '../../services/hooks';\r\nimport { ICardSorting, IIngredient } from '../../services/types/data';\r\n\r\nimport styleBurgerConstructor from \"./burger-constructor.module.css\";\r\nimport { useHistory } from 'react-router-dom'; \r\n\r\nimport { loadStateFromLocalstorage, saveStateInLocalstorage } from '../localstorage';\r\n\r\nexport const BurgerConstructor = memo(function BurgerConstructor()  {\r\n    const dataApi = useAppSelector(state => state.dataApiReducer.dataApi);\r\n    const { bun, main } = useAppSelector(state => state.constructorList);\r\n    const {orderApiRequest, orderNumber, orderApiFailed} = useAppSelector(state => state.orderNumber);\r\n    const { userInfo } = useAppSelector(state => state.userInfo)\r\n    const [totalPrice, setTotalPrice] = useState<number>(0);\r\n    const [isActiveStyleClass, setActiveStyleClass ] = useState<boolean>(false)\r\n    \r\n    const dispatch = useDispatch();  \r\n    const history = useHistory(); \r\n   \r\n    //Сохранение заказа в localStorage\r\n    useEffect(()=> {\r\n        saveStateInLocalstorage('burgerIngredient', {bun, main});\r\n\r\n    },[bun, main])\r\n\r\n    //получить данные из Localstorage\r\n    useEffect(()=> {\r\n        const {bun, main}  = loadStateFromLocalstorage('burgerIngredient')\r\n        if(bun || main){\r\n            dispatch(getIngredientsConstructorBun(bun))\r\n            dispatch(getIngredientsConstructorMain(main))\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    //получение номера заказа    \r\n    const getOrderNumberApi = () => {\r\n        if(!bun){return}\r\n        const allSelectedIdBun = [bun[0]._id]\r\n        const allSelectedIdBMain = main.map(item => item._id)\r\n        const allSelectedId = allSelectedIdBun.concat(allSelectedIdBMain);\r\n        dispatch(getOrder(\"orders\", allSelectedId))     \r\n    }\r\n\r\n\r\n    //модальное окно\r\n    const handleCloseModal = () => {\r\n        dispatch(resetOrder())\r\n        dispatch(resetIngredientsConstructor())\r\n        const arrayWithZeroCounter = dataApi.map(item => {\r\n                return {...item, counter: 0}})\r\n        dispatch(setDataApi(arrayWithZeroCounter));\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        //await dispatch(refreshToken)\r\n        if(userInfo.name){getOrderNumberApi();}\r\n        else if(!bun[0].name){}\r\n        else{\r\n            history.push({ pathname: '/login' });\r\n        }          \r\n    };\r\n\r\n    //Спиннер при получении заказа\r\n\r\n\r\n    const fillModal = () =>  (\r\n        <Modal header=\"\" onClose={handleCloseModal}> \r\n             {orderNumber ? <OrderDetails/> : \"\"}\r\n             {!orderNumber && orderApiRequest ? <Spinner/> : \"\" }\r\n             {orderApiFailed ? <>Произошла ошибка. Попробуйте позже</>: \"\"}\r\n        </Modal>\r\n    );\r\n\r\n\r\n    //Рассчет итоговой стоимости  \r\n    React.useMemo(() => { \r\n        let totalBun = 0;\r\n        let totalIngedients = 0;\r\n        if(main){\r\n            main.forEach(item => {\r\n                totalIngedients += item.price;\r\n        })}else{totalBun = 0;}\r\n        \r\n        if(bun[0] && bun[0].name){\r\n            totalBun += bun[0].price*2\r\n        }else{totalBun = 0;}\r\n        setTotalPrice(totalBun + totalIngedients)\r\n        \r\n    }, [main, bun]);\r\n\r\n    \r\n     // удаление ингредиентов из конструктора\r\n     const onDeleteIngredient = (uid:string, id:string) => {\r\n        const newIngerientsAr = main.filter(item => item.key !== uid);\r\n        dispatch(getIngredientsConstructorMain(newIngerientsAr))\r\n\r\n        const newArrDataApi:IIngredient[] = dataApi.map(item => {\r\n            if(item.counter){return {...item, counter: item?.counter-1}\r\n            } else return item\r\n        })\r\n\r\n        dispatch(setDataApi(newArrDataApi))\r\n    };\r\n\r\n    \r\n\r\n    //___________\r\n\r\n    const getBunElement = (pos: \"bottom\" | \"top\") => {\r\n        let textPosition = \"верх\"\r\n        if(pos === \"bottom\"){\r\n            textPosition = \"низ\"\r\n        }\r\n            return(\r\n             <li key={uuidv4()} className=\"mr-4\"  data-cypress=\"constructor-section\">\r\n            <ConstructorElement\r\n                type={pos}\r\n                isLocked={true}\r\n                text={`${bun[0].name} (${textPosition})`}\r\n                price={bun[0].price}\r\n                thumbnail={bun[0].image}\r\n            />\r\n        </li>   \r\n        )\r\n    };\r\n\r\n    \r\n\r\n    //сортировка \r\n    const findCard = useCallback((id: string): ICardSorting => {\r\n        const card:IIngredient = main.filter(c => `${c.key}` === id)[0];\r\n        const index: number = main.findIndex(item => { return item.key === card.key } )\r\n        return {\r\n            card,\r\n            index\r\n        };\r\n    }, [main]);\r\n    \r\n    const moveCard = useCallback((id: string, atIndex: number) => {\r\n        const { card, index } = findCard(id);\r\n        const newArr = update(main, {$splice: [\r\n                    [index, 1],\r\n                    [atIndex, 0, card],\r\n                ]})\r\n        dispatch( sortIngredientsConstructor(newArr))\r\n        \r\n    }, [findCard, main, dispatch]);\r\n\r\n\r\n\r\n    const [, dropSort] = useDrop(() => ({ accept: \"sorting\" }));\r\n\r\n   \r\n\r\n    const getIngridientElements = () => {\r\n       \r\n       return main.map(ingredient => {  \r\n        return (<IngrediendCardConstructor \r\n                key={ingredient.key} \r\n                ingredient={ingredient} \r\n                onDeleteIngredient={onDeleteIngredient}  \r\n                id={`${ingredient.key}`} moveCard={moveCard} findCard={findCard}/>)\r\n      }\r\n       )};\r\n\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'constructor', \r\n        drop(item: any) {\r\n            if(item.card.type === 'bun'){\r\n                dispatch(getIngredientsConstructorBun({...item.card, key: uuidv4()}));    \r\n            }else{dispatch(addIngredientsConstructorMain({...item.card, key: uuidv4()}))}\r\n\r\n            const arrayWithNewCounter = dataApi.map(ingred => {\r\n                if(ingred.type === 'bun' && item.card.type === \"bun\"){\r\n                    if(ingred._id === item.card._id){\r\n                        return {...ingred, counter:  1}\r\n                    }else  {\r\n                        return  {...ingred, counter: 0}\r\n                    }\r\n                }else if( !ingred.counter && ingred._id === item.card._id){\r\n                    return {...ingred, counter: 1}\r\n                }else if(ingred.counter && ingred._id === item.card._id){\r\n                    return {...ingred, counter: ingred.counter + 1}\r\n                }else return ingred\r\n            })\r\n            \r\n            dispatch(setDataApi(arrayWithNewCounter))\r\n        },\r\n    })\r\n\r\n    //деактивировать кнопку\r\n    useEffect(()=> {\r\n        if(bun[0]){\r\n            setActiveStyleClass(true)\r\n        } else {setActiveStyleClass(false)}\r\n    },[bun])\r\n\r\n    const emptyBunTop = <li data-cypress=\"constructor-section\"  className={`${styleBurgerConstructor.emptyTopElement} mr-4 text text_type_main-default`}>Выберите булку</li>\r\n    const emptyBunBottom = <li data-cypress=\"constructor-section\"  className={`${styleBurgerConstructor.emptyBottomElement} mr-4 text text_type_main-default`}>Выберите булку</li>\r\n    const emptyMain = <li  data-cypress=\"constructor-section\"  className={`${styleBurgerConstructor.emptyIngredientElements} mr-4 text text_type_main-default`}>Выберите начинку</li>\r\n  \r\n\r\n    return (\r\n        <>\r\n            <section ref={ drop } className={styleBurgerConstructor.wrapper} >\r\n                <ul   data-cypress=\"constructor-ul\"\r\n               ref={dropSort}  \r\n                className={`${styleBurgerConstructor.scroll} mt-25 pl-1`}> \r\n                    {bun[0]?.name  ? getBunElement(\"top\") : emptyBunTop}\r\n                    {main.length ? getIngridientElements() : emptyMain}\r\n                    {bun[0]?.name ? getBunElement(\"bottom\") : emptyBunBottom}\r\n                </ul>\r\n                <div  className={`${styleBurgerConstructor.totalWrapper} ${!isActiveStyleClass ? styleBurgerConstructor.nonActiveButton : \"\"} mt-10 mb-15`} >\r\n                    <div className={`mr-10`} >\r\n                    <p data-cypress=\"total-cost\" className={`text text_type_digits-medium mt-1 mr-2 ` }>{totalPrice}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <Button type=\"primary\" size=\"medium\" onClick={handleOpenModal} >\r\n                    Оформить заказ\r\n                </Button>\r\n                </div>\r\n            </section>\r\n            {orderNumber || orderApiRequest || orderApiFailed ? fillModal() : null}\r\n        </>\r\n    )\r\n    \r\n});  \r\n\r\n","import React from \"react\";\r\nimport BurgerIngredients from \"../components/burger-ingredients/burger-ingredients\";\r\nimport { BurgerConstructor } from \"../components/burger-сonstructor/burger-constructor\";\r\nimport { DndProvider } from \"react-dnd\"; \r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { getUserInfoApi } from \"../services/actions/user-info\";\r\nimport { useDispatch } from \"../services/hooks\";\r\n\r\n\r\nexport function MainPage() {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    React.useEffect(()=> {\r\n        dispatch(getUserInfoApi())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n          <main>\r\n            <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients />\r\n              <BurgerConstructor />\r\n            </DndProvider>\r\n          </main> \r\n        </>\r\n    )\r\n}","export function NotFound404() {\r\n    return (\r\n        <>\r\n        <main className=\"m-10\">\r\n            <p>Упс! Страница не найдена</p>\r\n        </main>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n","import { TAuthorization } from '../types/data'\r\nimport { API_URL } from '../../utils/constants';\r\nimport checkResponse from '../checkResponse';\r\nimport { customFetch } from '../custom-fetch';\r\nimport { IUserInfo } from '../types/data';\r\nimport {\r\n  addUserInfo\r\n} from './user-info'\r\nimport { AppThunk } from '../types';\r\n\r\nexport const GET_USER_REGISTER_API: 'GET_USER_REGISTER_API' = 'GET_USER_REGISTER_API';\r\nexport const GET_USER_REGISTER_API_FAILED: 'GET_USER_REGISTER_API_FAILED' = 'GET_USER_REGISTER_API_FAILED';\r\nexport const GET_USER_REGISTER_API_SUCCESS: 'GET_USER_REGISTER_API_SUCCESS' = 'GET_USER_REGISTER_API_SUCCESS';\r\nexport const RESET_USER_REGISTER_API: 'RESET_USER_REGISTER_API'= 'RESET_USER_REGISTER_API';\r\n\r\nexport interface IGetUserRegisterApi{\r\n  readonly type: typeof GET_USER_REGISTER_API;\r\n}\r\nexport interface IGetUserRegisterApiFailed{\r\n  readonly type: typeof GET_USER_REGISTER_API_FAILED;\r\n}\r\nexport interface IGetUserRegisterApiSuccess{\r\n  readonly type: typeof GET_USER_REGISTER_API_SUCCESS;\r\n  userRegisterApi: TAuthorization\r\n}\r\nexport interface IResetUserRegisterApi{\r\n  readonly type: typeof RESET_USER_REGISTER_API;\r\n}\r\n\r\nexport type TUserRegisterActions = \r\n    IGetUserRegisterApi |\r\n    IGetUserRegisterApiFailed |\r\n    IGetUserRegisterApiSuccess |\r\n    IResetUserRegisterApi |\r\n    any;\r\n\r\n\r\nfunction getUserRegisterApi() {\r\n    return {\r\n      type: GET_USER_REGISTER_API \r\n    }\r\n}\r\n\r\nfunction getUserRegisterApiFailed() {\r\n    return {\r\n      type: GET_USER_REGISTER_API_FAILED,\r\n    }\r\n}\r\n\r\nfunction getUserRegisterApiSuccess(payload: TAuthorization) {\r\n    return {\r\n      type: GET_USER_REGISTER_API_SUCCESS,\r\n      payload\r\n    }\r\n}\r\n\r\nfunction resetUserRegisterApi() {\r\n    return {\r\n      type: RESET_USER_REGISTER_API,\r\n    }\r\n}\r\n\r\nconst getUserRegisterApiRequest: AppThunk = (endpoint:string, body:IUserInfo ) => {\r\n  return function(dispatch) {\r\n    dispatch(getUserRegisterApi())\r\n    customFetch({endpoint, method: \"POST\", body})\r\n    fetch(`${API_URL}${endpoint}`, {\r\n      method: 'POST', \r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n        dispatch(getUserRegisterApiSuccess(res))\r\n        dispatch(addUserInfo(res.user))\r\n    } else {\r\n        dispatch(getUserRegisterApiFailed())\r\n    }\r\n}).catch( err => {\r\n    dispatch(getUserRegisterApiFailed())\r\n})\r\n}\r\n} \r\n\r\n\r\nexport {\r\n    getUserRegisterApi,\r\n    getUserRegisterApiFailed,\r\n    getUserRegisterApiSuccess,\r\n    resetUserRegisterApi, \r\n    getUserRegisterApiRequest\r\n}","import React, {ChangeEvent, SyntheticEvent, useEffect} from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { PasswordInput, Input, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getUserRegisterApiRequest } from \"../services/actions/user-register-api\";\r\nimport { useAppSelector, useDispatch } from \"../services/hooks\";\r\n\r\nimport styles from './common.module.css';\r\nimport { getUserInfoApi } from \"../services/actions/user-info\";\r\n\r\nexport function RegisterPage() {\r\n    const { userInfo, userInfoRequest } = useAppSelector(state => state.userInfo)\r\n    const [password, setPassword] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        //получить данные о пользователе \r\n        const init =  () => {\r\n            // Вызовем запрос getUser и изменим состояние isUserLoaded\r\n            dispatch(getUserInfoApi());\r\n        };\r\n        // При монтировании компонента запросим данные о пользователе\r\n        init();\r\n    }, [dispatch]);\r\n\r\n    //запрос к API, регистрация\r\n    const onRegister = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            \"email\": email, \r\n            \"password\": password, \r\n            \"name\": name \r\n        }\r\n        dispatch(getUserRegisterApiRequest(\"auth/register\", body))\r\n    }\r\n    \r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n  \r\n    const onIconClick = () => {\r\n        setTimeout(() => inputRef?.current?.focus(), 0)\r\n    }\r\n\r\n    if (userInfoRequest && userInfo && !userInfo.name   ) {\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n         userInfo && !userInfo.name ?\r\n        <>\r\n            <main  className={styles.main}>\r\n                <div className={styles.container}>\r\n                    <p className={`text text_type_main-medium mb-6`}>Регистрация</p>\r\n                    <form className={`${styles.form} mb-20`} >\r\n                        \r\n                        <Input \r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={e => setName(e.target.value)}\r\n                        value={name}\r\n                        error={false}\r\n                        ref={inputRef}\r\n                        onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n\r\n                        <Input \r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        value={email}\r\n                        error={false}\r\n                        ref={inputRef}\r\n                        onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                        <PasswordInput  onChange={onChange} value={password} name={'Пароль'}  />\r\n                        <Button type=\"primary\" size=\"medium\" onClick={onRegister}>\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                    <div className={` text text_type_main-default text_color_inactive ${styles.disclaimer} mb-4`} >Уже зарегистрированы?  <Link to='/login'><Button type=\"secondary\" size=\"medium\">Войти</Button></Link></div>\r\n                </div>\r\n            </main>\r\n        </>\r\n     :   <Redirect  to={\"/\"}/> )\r\n}","import React, { ChangeEvent, useEffect} from \"react\";\r\nimport { useHistory, Link ,Redirect} from 'react-router-dom';\r\nimport { PasswordInput, Input, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { resetPassword, resetPasswordStatus } from \"../services/actions/password\";\r\nimport { TRootState } from \"../services/types\";\r\nimport { IHistoryState } from \"../services/types/data\";\r\nimport { useAppSelector, useDispatch } from \"../services/hooks\";\r\n\r\n\r\nimport styles from './common.module.css';\r\n\r\nexport function ResetPasswordPage() {\r\n    const resetPasswordStatusText = useAppSelector((state:TRootState) => state.password.resetPasswordStatus)\r\n    const [password, setPassword] = React.useState('');\r\n    const [value, setValue] = React.useState('');\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n    const history = useHistory();\r\n    const state = history.location.state as IHistoryState\r\n    const dispatch = useDispatch();\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n  \r\n    const onIconClick = () => {\r\n        setTimeout(() => inputRef?.current?.focus(), 0)\r\n    }\r\n\r\n    const onResetPassword = (e: ChangeEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(resetPassword({\"password\": password, \"token\": value }))\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(resetPasswordStatusText === \"Password successfully reset\"){\r\n        history.replace({ pathname: '/login' });\r\n        dispatch(resetPasswordStatus(\"\"))\r\n    }\r\n    },[resetPasswordStatusText, dispatch, history])\r\n\r\n\r\n\r\n    let isFromForgotPage: boolean | undefined = false\r\n\r\n    if(history.location.state){\r\n        isFromForgotPage = state.fromForgotPassword\r\n    }\r\n\r\n    return (\r\n        isFromForgotPage ? \r\n        <>\r\n            <main  className={styles.main}>\r\n                <div className={styles.container}>\r\n                    <p className={`text text_type_main-medium mb-6`}>Восстановление пароля</p>\r\n                    <form className={`${styles.form} mb-20`}  onSubmit={onResetPassword}>\r\n                        <PasswordInput  onChange={onChange} value={password} name={'Пароль'}  />\r\n                        <Input \r\n                        type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        value={value}\r\n                        error={false}\r\n                        ref={inputRef}\r\n                        onIconClick={onIconClick}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'} />\r\n                        <Button type=\"primary\" size=\"medium\" >\r\n                            Сохранить\r\n                        </Button>\r\n                    </form>\r\n                    <div className={` text text_type_main-default text_color_inactive ${styles.disclaimer} mb-4`} >Вспомнили пароль?  <Link to='/login'><Button type=\"secondary\" size=\"medium\">Войти</Button></Link></div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    : <Redirect  to={{pathname: \"/forgot-password\", state: { fromForgotPassword: false }}}  /> )\r\n}","import dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport updateLocale  from 'dayjs/plugin/updateLocale';\r\n\r\n\r\n//получить дату заказа\r\n\r\nexport const getDataOrder = (data:string) => {\r\n    dayjs.extend(updateLocale)\r\n    dayjs.updateLocale('en', {\r\n    relativeTime: {\r\n        future: \"через %s\",\r\n        past: \"%s назад\",\r\n        s: 'Сегодня',\r\n        m: \"Сегодня\",\r\n        mm: \"Сегодня\",\r\n        h: \"Сегодня\",\r\n        hh: \"Сегодня\",\r\n        d: \"Вчера\",\r\n        dd: `{dd} дня(ей) назад`,\r\n        M: \"месяц назад\",\r\n        MM: \"%d месяцев назад\",\r\n        y: \"год назад\",\r\n        yy: \"%d года(лет) назад\"\r\n    }\r\n    })\r\n    dayjs.extend(relativeTime)\r\n    const dataTime = dayjs(data).format(`, HH:mm i-GMT+3`)\r\n    const dataDAy = dayjs(data).fromNow(true)\r\n    return dataDAy+dataTime\r\n\r\n}\r\n\r\n\r\n//Троеточие в названии, если очень длинное слово\r\n\r\nexport const setShortName = (name: string) => {\r\n    if(name.length > 60){\r\n        return name.substring(0, 60) + \"...\"\r\n    }else return name\r\n}\r\n","import { useAppSelector } from '../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from './order-item.module.css';\r\nimport { getDataOrder, setShortName } from '../../utils/utils';\r\nimport { IIngredient, TOrder } from '../../services/types/data';\r\nimport { FC } from 'react';\r\nimport  { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst OrderItem = (order: {order: TOrder; path: string}) => {\r\n    \r\n    const {createdAt, number, _id, name, ingredients, status} = order.order; \r\n    const { dataApi } = useAppSelector(state => state.dataApiReducer);\r\n    const location = useLocation();\r\n\r\n\r\n    let orderedIngredients: IIngredient[] | [] = [];\r\n    let sum: number = 0;   \r\n    ingredients.forEach(_id => {\r\n        const foundIngredient: IIngredient | undefined= dataApi.find((item)=> item._id === _id)\r\n        if (foundIngredient){\r\n            sum = sum + foundIngredient!.price;\r\n            orderedIngredients = [...orderedIngredients, foundIngredient]\r\n        }\r\n    });\r\n\r\n    //получить иконки\r\n    \r\n    \r\n    const IconsIngredient: FC<{ingredient: IIngredient; indexIcon: number; length: number; key ?: string}> = ({ingredient, indexIcon, length}) =>{\r\n        return ( \r\n            <div className={`${styles.wrapperIconImg}`}>\r\n                <div>\r\n                    <img src={ingredient.image} alt=\"icon\"/>\r\n                    {indexIcon === 5 && length > 6 ? <span className={`${styles.lastIconIngredient} text text_type_main-default`}>+{length - 6}</span>: null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    //получить статус\r\n\r\n    //Получить текст статуса\r\n    const getStatus = (status: \"done\" | \"pending\" | \"created\" | undefined) =>{\r\n        switch(status){\r\n            case \"done\": \r\n                return  \"Выполнен\";\r\n            case 'pending':\r\n                return \"Готовится\";\r\n            case 'created':\r\n                return \"Создан\";\r\n            default: \r\n                return \"\"\r\n            \r\n        }\r\n    }\r\n    return(\r\n        <li key={_id} className={`${styles.container} p-6 ml-0 mr-6 mb-4 mt-4`}>\r\n            <Link \r\n             to={{\r\n                pathname: `/${order.path}/${_id}`,\r\n                state: { background: location }\r\n            }}\r\n                className={`${styles.ingedientCard} `}\r\n             >\r\n                <div className={`${styles.headerCard} mb-2`}>\r\n                    <p className=\"text text_type_main-medium\">#{number}</p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{getDataOrder(createdAt)}</p>\r\n                </div>\r\n                <h2 className=\"text text_type_main-medium mb-2\">{setShortName(name)}</h2>\r\n                { order.path === \"feed\" ? '' : <p className=\"text text_type_main-small mb-2 textColor2\">{getStatus(status)}</p>}\r\n                <div className={`${styles.footerCard} `}>\r\n                    <div className={`${styles.wrapperIcons}`}>\r\n                        {orderedIngredients.map((item, index) => {\r\n                            return  index <= 5   &&  <IconsIngredient key={uuidv4()} ingredient={item} indexIcon={index} length={orderedIngredients.length} />\r\n                        })}\r\n                    </div>\r\n                    <div className={`${styles.wrapperPrice}`}>\r\n                        <span className={` text text_type_main-medium pr-2`} >{sum}</span>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default OrderItem;","import { IMessageWS } from '../types/data';\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED'= 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\r\n\r\n\r\nexport interface IWsConnectionStart{\r\n    readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IWsConnectionSuccess{\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsConnectionError{\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\nexport interface IWsConnectionClosed{\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\nexport interface IWsGetOrders{\r\n    readonly type: typeof  WS_GET_ORDERS;\r\n    readonly payload: IMessageWS\r\n}\r\n\r\nexport type TWsConnectionActions = \r\nIWsConnectionStart |\r\nIWsConnectionSuccess |\r\nIWsConnectionError |\r\nIWsConnectionClosed |\r\nIWsGetOrders |\r\nany;\r\n\r\nfunction wsConnectionStart(payload: string) {\r\n    return {\r\n        type: WS_CONNECTION_START, \r\n        payload\r\n    }\r\n}\r\n\r\nfunction wsConnectionSuccess() {\r\n    return {\r\n        type: WS_CONNECTION_SUCCESS\r\n    }\r\n}\r\nfunction wsConnectionError() {\r\n    return {\r\n        type: WS_CONNECTION_ERROR\r\n    }\r\n}\r\nfunction wsConnectionClosed() {\r\n    return {\r\n        type: WS_CONNECTION_CLOSED\r\n    }\r\n}\r\n\r\nfunction wsGetOrders(message: IMessageWS){\r\n    return  {\r\n        type: WS_GET_ORDERS,\r\n        payload: message        \r\n    }\r\n}\r\n\r\nexport const wsActions = {\r\n    wsConnectionStart,\r\n    wsConnectionSuccess,\r\n    wsConnectionError, \r\n    wsConnectionClosed,\r\n    wsGetOrders\r\n}\r\n\r\nexport {\r\n    wsConnectionStart,\r\n    wsConnectionSuccess,\r\n    wsConnectionError, \r\n    wsConnectionClosed,\r\n    wsGetOrders\r\n}","import React from 'react';\r\nimport OrderItem from \"../../components/order-item/order-item\";\r\nimport { wsConnectionStart, wsConnectionClosed } from '../../services/actions/websockets';\r\nimport  { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './feed.module.css';\r\nimport { getIngredientsApi } from '../../services/actions/data-api';\r\nimport { useAppSelector, useDispatch } from \"../../services/hooks\";\r\nimport { WS_URL } from '../../utils/constants';\r\n\r\n\r\n\r\nexport const FeedPage = () => {\r\n    const { dataApi } = useAppSelector(state => state.dataApiReducer);\r\n    const { orders, total, totalToday } = useAppSelector(state => state.wsConnection);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n     //запрос ингридиентов с API\r\n     React.useEffect(()=> {\r\n        if(dataApi.length < 1) {dispatch(getIngredientsApi(\"ingredients\"))}\r\n    }, [dispatch, dataApi.length])\r\n\r\n    //запрос заказов с API\r\n    React.useEffect(()=> {\r\n        dispatch(wsConnectionStart(`${WS_URL}/all`))\r\n        return (): void => {\r\n            dispatch(wsConnectionClosed())\r\n        }\r\n    }, [dispatch])\r\n\r\n    //Получить количество заказов в статусе \"Готово\"\r\n    const getNumsOrdersbyStatus = (statusOrder: \"done\" | \"pending\") => {\r\n        const numsOrdersByDone: number[] = [];\r\n        const numsOrdersByPending: number[]  = [];\r\n\r\n        orders.forEach(order => {\r\n            if(order.status === 'done' && numsOrdersByDone.length < 20){\r\n                numsOrdersByDone.push(order.number)\r\n            }\r\n            else if(order.status === 'pending' && numsOrdersByPending.length <  20){\r\n                numsOrdersByPending.push(order.number)\r\n            }   \r\n        })\r\n        if(statusOrder === 'done'){\r\n            return numsOrdersByDone\r\n        }else if(statusOrder === 'pending'){\r\n            return numsOrdersByPending\r\n        }\r\n    }\r\n\r\n    if (!orders.length) {\r\n        return <div>Загрузка заказов...</div>;\r\n    }\r\n    return (\r\n        <>\r\n        <main className={styles.container}>\r\n                <h1 className=\"text text_type_main-large mb-5 mt-10\">Лента заказов</h1>\r\n                <section className={styles.wrapperOrder}>\r\n                    <ul className={`${styles.orderList} mr-4 mb-5 `}>\r\n                        {dataApi.length>1 ? orders?.map((order) => {\r\n                            return <OrderItem key={uuidv4()} order={order} path=\"feed\"/>\r\n                        }): \"\"}\r\n                    </ul>\r\n                    <div className={`${styles.сommonInfo} ml-15`}>\r\n                        <div className={`${styles.orderDisplay} mt-4 mb-15`}>\r\n                            <div >\r\n                                <p className=\"text text_type_main-medium mr-6 mb-6\">\r\n                                    Готовы:\r\n                                </p>\r\n                                <p className={`${styles.waveColor} ${styles.wrapperStatus}  text text_type_digits-default`}>\r\n                                    {getNumsOrdersbyStatus(\"done\")?.map(item =>{\r\n                                        return <span key={uuidv4()}>{item}</span>\r\n                                    })}\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <p className={`text text_type_main-medium mb-6`} >\r\n                                    В работе:\r\n                                </p>\r\n                                <p className={`${styles.wrapperStatus} text text_type_digits-default`}>\r\n                                    {getNumsOrdersbyStatus(\"pending\")?.map(item =>{\r\n                                        return <><span key={uuidv4()}>{item}</span><br/></>\r\n                                    })}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"text text_type_main-medium \">\r\n                                Выполнено за все время:\r\n                            </p>\r\n                            <p className={`${styles.digits} text text_type_digits-large`}>\r\n                                {total}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p className='text text_type_main-medium mt-15'>\r\n                                Выполнено за сегодня:\r\n                            </p>\r\n                            <p className={`${styles.digits} text text_type_digits-large`}>\r\n                                {totalToday}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}","import { API_URL } from '../../utils/constants';\r\nimport checkResponse from '../checkResponse';\r\nimport { saveStateInLocalstorage } from '../../components/localstorage';\r\nimport {\r\n  resetUserInfo\r\n} from './user-info'\r\nimport { AppThunk } from '../types';\r\n\r\nexport const USER_LOGOUT_REQUEST: 'USER_LOGOUT_REQUEST' = 'USER_LOGOUT_REQUEST';\r\nexport const USER_LOGOUT_REQUEST_FAILED: 'USER_LOGOUT_REQUEST_FAILED' = 'USER_LOGOUT_REQUEST_FAILED';\r\nexport const USER_LOGOUT_REQUEST_SUCCESS: 'USER_LOGOUT_REQUEST_SUCCESS'= 'USER_LOGOUT_REQUEST_SUCCESS';\r\n\r\n\r\nexport interface IUserLogoutRequest{\r\n  readonly type: typeof USER_LOGOUT_REQUEST;\r\n}\r\nexport interface IUserLogoutFailed{\r\n  readonly type: typeof USER_LOGOUT_REQUEST_FAILED;\r\n}\r\nexport interface IUserLogoutSuccess{\r\n  readonly type: typeof USER_LOGOUT_REQUEST_SUCCESS;\r\n}\r\n\r\nexport type TUserLogoutActions = \r\n    IUserLogoutRequest |\r\n    IUserLogoutFailed |\r\n    IUserLogoutFailed |\r\n    any;\r\n\r\nfunction userLogoutRequest() {\r\n    return {\r\n      type: USER_LOGOUT_REQUEST,\r\n    }\r\n}\r\n\r\nfunction userLogoutFailed() {\r\n    return {\r\n      type: USER_LOGOUT_REQUEST_FAILED,\r\n    }\r\n}\r\n\r\nfunction userLogoutSuccess() {\r\n    return {\r\n      type: USER_LOGOUT_REQUEST_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst userLogoutRequestApi: AppThunk = (refreshToken: {[key:string]: string}) => {\r\n  return function(dispatch) {\r\n    dispatch(userLogoutRequest())\r\n    fetch(`${API_URL}auth/logout `, {\r\n      method: 'POST', \r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      body: JSON.stringify(refreshToken)\r\n    })\r\n      .then(checkResponse)\r\n      .then( res => {\r\n        if (res && res.success) {\r\n          if (res && res.success) {\r\n            saveStateInLocalstorage('token', \"\");\r\n            saveStateInLocalstorage('refreshToken', \"\");\r\n            dispatch(userLogoutSuccess())\r\n            dispatch(resetUserInfo()) \r\n            return res                \r\n          } else {\r\n              throw res.err\r\n  \r\n          }\r\n    } else {\r\n        dispatch(userLogoutFailed())\r\n        return res\r\n    }\r\n}).catch( err => {\r\n    dispatch(userLogoutFailed())\r\n    return err\r\n})\r\n}\r\n} \r\n\r\n\r\n\r\nexport {\r\n    userLogoutRequest,\r\n    userLogoutFailed,\r\n    userLogoutSuccess, \r\n    userLogoutRequestApi\r\n}","import React from 'react';\r\nimport styles from \"./orders.module.css\";\r\nimport { useAppSelector, useDispatch } from \"../../services/hooks\";\r\nimport OrderItem from \"../../components/order-item/order-item\";\r\nimport { getIngredientsApi } from '../../services/actions/data-api';\r\nimport { loadStateFromLocalstorage } from '../../components/localstorage';\r\nimport { wsConnectionClosed, wsConnectionStart, \r\n    // wsConnectionProfileStart \r\n} from '../../services/actions/websockets';\r\nimport { WS_URL } from '../../utils/constants';\r\nimport  { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const OrdersPage = () => {\r\n    const { dataApi } = useAppSelector(state => state.dataApiReducer);\r\n    const { orders } = useAppSelector(state => state.wsConnection);\r\n    const dispatch = useDispatch();\r\n\r\n     //запрос ингридиентов с API\r\n     React.useEffect(()=> {\r\n        if(dataApi.length < 1) {dispatch(getIngredientsApi(\"ingredients\"))}\r\n    }, [dispatch, dataApi.length])\r\n\r\n    //запрос заказов с API\r\n    React.useEffect(()=> {\r\n        const accessToken = loadStateFromLocalstorage('token');\r\n        dispatch(wsConnectionStart(`${WS_URL}?token=${accessToken}`))\r\n        return (): void => {\r\n            dispatch(wsConnectionClosed())\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (!orders.length) {\r\n        return <div>Загрузка заказов...</div>;\r\n    }\r\n\r\n    return(\r\n        <section className={styles.section}>\r\n            <ul className={`${styles.ordersList} mr-4 mb-5 `}>\r\n                { orders?.map(order => {\r\n                    return <OrderItem key={uuidv4()} order={order} path=\"profile/orders\"/>\r\n                })}\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport stylesOrderComp from \"./order-component.module.css\";\r\nimport React from \"react\";\r\nimport  { v4 as uuidv4 } from 'uuid';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useAppSelector, useDispatch } from \"../../services/hooks\";\r\nimport { wsConnectionStart, \r\n    // wsConnectionProfileStart \r\n} from '../../services/actions/websockets';\r\nimport { IIngredient } from '../../services/types/data';\r\nimport { getDataOrder } from '../../utils/utils';\r\nimport { getIngredientsApi } from '../../services/actions/data-api';\r\nimport { loadStateFromLocalstorage } from '../localstorage';\r\nimport { IBackgroundLocation } from \"../../services/types/data\";\r\nimport { WS_URL } from '../../utils/constants';\r\n\r\nexport const OrderComponent = () => {\r\n    const { dataApi } = useAppSelector(state => state.dataApiReducer);\r\n    const { orders } = useAppSelector(state => state.wsConnection);\r\n    const { id }: {[name: string] : string} = useParams()\r\n    const location = useLocation<IBackgroundLocation>();\r\n    let background = location.state && location.state.background;\r\n    const dispatch = useDispatch(); \r\n    \r\n    const currentOrder = orders.find(order => order._id === id)\r\n    const uniquListIngredient  = Array.from(new Set(currentOrder?.ingredients));\r\n\r\n    //запрос ингридиентов с API\r\n    React.useEffect(()=> {\r\n        if(dataApi.length < 1) {dispatch(getIngredientsApi(\"ingredients\"))}\r\n    }, [dispatch, dataApi.length])\r\n\r\n    //запрос заказов с API\r\n    React.useEffect(()=> {\r\n        if(location.pathname.includes(\"orders\") && loadStateFromLocalstorage('token')){\r\n            const accessToken = loadStateFromLocalstorage('token');\r\n            dispatch(wsConnectionStart(`${WS_URL}?token=${accessToken}`))\r\n        }else dispatch(wsConnectionStart(`${WS_URL}/all`))\r\n    }, [dispatch, location.pathname])\r\n\r\n\r\n    //Получить текст статуса\r\n    const getStatus = (status: \"done\" | \"pending\" | \"created\" | undefined) =>{\r\n        switch(status){\r\n            case \"done\": \r\n                return  \"Выполнен\";\r\n            case 'pending':\r\n                return \"Готовится\";\r\n            case 'created':\r\n                return \"Создан\";\r\n            default: \r\n                return \"\"\r\n            \r\n        }\r\n    }\r\n\r\n    //Ингридиент\r\n    const IngredientInOrder = (id: {id: string}) => {     \r\n        const currentIngredient: IIngredient | undefined = dataApi.find(item => item._id === id.id)\r\n        \r\n        let count = 0;\r\n        currentOrder?.ingredients.forEach( item => {\r\n            if(item === id.id){ \r\n                count++\r\n            }\r\n        })\r\n\r\n        return(\r\n            dataApi && <li className={`${stylesOrderComp.wrapperLi} mb-2`}>\r\n            <div className={`${stylesOrderComp.wrapperIconImg} mr-4` }>\r\n                <div><img src={currentIngredient?.image} alt=\"icon\"/></div>\r\n            </div>\r\n            <p className={`${stylesOrderComp.liText} text text_type_main-small mr-6`}>{currentIngredient?.name}</p>\r\n            <div className={`${stylesOrderComp.liCount} mr-4`}>\r\n                <div className=\"text text_type_main-default mr-2\"> {count} </div>\r\n                <div className=\"text text_type_main-default mr-2\"> x </div>\r\n                <div className=\"text text_type_main-default mr-2\">  {currentIngredient?.price} </div>    \r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n        </li>\r\n        )\r\n    }\r\n\r\n    //сумма заказа\r\n\r\n    let sum: number = 0;   \r\n    \r\n    currentOrder?.ingredients.forEach(_id => {\r\n        const foundIngredient: IIngredient | undefined= dataApi.find((item)=> item._id === _id)\r\n        if(foundIngredient){ sum = sum + foundIngredient!.price }\r\n    });\r\n\r\n    //Стиль номера заказа\r\n    const stylуOrderNumber = () => {\r\n        if(!background){\r\n            return stylesOrderComp.numberOrderCenter\r\n        }else return stylesOrderComp.numberOrderleft\r\n    }\r\n\r\n    if (!orders.length) {\r\n        return <div>Загрузка заказа...</div>;\r\n    }\r\n\r\n    return(\r\n        <main className={stylesOrderComp.orderMain}>\r\n           <section className={`${stylesOrderComp.wrapper}`}>\r\n                <p className={`${stylуOrderNumber()} text text_type_main-medium mb-10`}>#{currentOrder?.number}</p>\r\n                <h2 className=\"text text_type_main-medium mb-3\">{currentOrder?.name}</h2>\r\n                <p className=\"text text_type_main-small mb-15 textColor2\">{getStatus(currentOrder?.status)}</p>\r\n\r\n                <p className=\"text text_type_main-medium mb-6\">Состав</p>\r\n                <ul className=\"mb-8\">\r\n                    {uniquListIngredient.map(item => {\r\n                       return <IngredientInOrder id={item} key={uuidv4()}/>\r\n                    })}\r\n                </ul>\r\n                \r\n                <div className={`${stylesOrderComp.footer}`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{currentOrder && getDataOrder(currentOrder?.createdAt)}</p>\r\n                    <div className=\"mr-4\">\r\n                        <span className=\"text text_type_main-default mr-2\">{sum}</span>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n           </section>\r\n        </main>\r\n    )\r\n}","import stylesOrder from \"./order.module.css\";\r\nimport { OrderComponent } from '../../components/order-component/order-component';\r\n\r\nexport const OrderPage = () => {\r\n\r\n    return(\r\n            <div className={`${stylesOrder.wrapper}`}>\r\n            <OrderComponent/>\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useEffect, useState, MouseEvent, SyntheticEvent } from \"react\";\r\nimport {  useRouteMatch, NavLink, Redirect } from 'react-router-dom';\r\nimport {  Input, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getUserInfoApi } from \"../../services/actions/user-info\";\r\nimport { userLogoutRequestApi } from \"../../services/actions/user-logout\";\r\nimport { changeUserInfoApi } from \"../../services/actions/user-info\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { refreshToken } from \"../../services/refresh-token\";\r\nimport { loadStateFromLocalstorage } from \"../../components/localstorage\";\r\nimport { useAppSelector, useDispatch } from \"../../services/hooks\";\r\nimport { OrdersPage } from \"../orders/orders\";\r\nimport { OrderPage } from \"../order/order\";\r\n\r\n\r\nimport ProfileStyles  from './profile.module.css';\r\nimport { TICons } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\r\n\r\nexport function ProfilePage() {\r\n    const email = useAppSelector(state => state.userInfo.userInfo!.email)\r\n    const name = useAppSelector(state => state.userInfo.userInfo!.name)\r\n    const  userInfoRequestFailed  = useAppSelector(state => state.userInfo.userInfoRequestFailed)\r\n    const [inputName, setInputName] = React.useState('имя')\r\n    const [login, setLogin] = React.useState<string>('email')\r\n    const [password, setPassword] = React.useState('')\r\n    const inputRefName = React.useRef<HTMLInputElement>(null);\r\n    const inputRefEmail = React.useRef<HTMLInputElement>(null);\r\n    const inputRefPassword = React.useRef<HTMLInputElement>(null);\r\n\r\n    const { url } = useRouteMatch();\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(()=> {\r\n        refreshToken();\r\n        dispatch(getUserInfoApi)\r\n    }, [dispatch])\r\n\r\n    useEffect(()=> {\r\n        if( email || name){\r\n            setInputName(name)\r\n            setLogin(email)\r\n    }\r\n     }, [email, name])\r\n\r\n\r\n    const onLogout = (e:  SyntheticEvent) => {\r\n        e.preventDefault();\r\n        let refreshToken =  loadStateFromLocalstorage('refreshToken');\r\n        dispatch(userLogoutRequestApi({\"token\" :  refreshToken}))\r\n    }\r\n\r\n    //изменить данные \r\n    const [isButtonShow, setIsButtonShow] = useState(false);\r\n\r\n    const [iconName, setIconName] = useState<keyof TICons>('EditIcon');\r\n    const [iconEmail, setIconEmail] = useState<keyof TICons>('EditIcon');\r\n    const [iconPassword, setIconPassword] = useState<keyof TICons>('EditIcon');\r\n\r\n    const [disableName, setdisableName] = useState(true);\r\n    const [disableEmail, setdisableEmail] = useState(true);\r\n    const [disablePassword, setdisablePassword] = useState(true);\r\n\r\n    const [typeInputPassword, setTypeInputPassword] = useState<\"password\" | \"email\" | \"text\" | undefined>(\"password\");\r\n\r\n    useEffect(() =>{\r\n        if(iconPassword === \"CheckMarkIcon\"){\r\n            setTypeInputPassword(\"text\") \r\n        } else(setTypeInputPassword(\"password\"))\r\n    }, [iconPassword])\r\n\r\n    const showButton = () => {\r\n        if(!isButtonShow) {setIsButtonShow(true)}\r\n    }\r\n\r\n    const onChangeUserInfo = useCallback(\r\n        () => {\r\n            let body = {\r\n                \"email\": login, \r\n                \"name\": inputName, \r\n                \"password\": password\r\n            }\r\n            dispatch(changeUserInfoApi(body))  \r\n            if(userInfoRequestFailed){\r\n                setInputName(name);\r\n                setLogin(email);\r\n                setPassword(\"\") \r\n                setIsButtonShow(false);\r\n                setIconNameAll()\r\n            }else {\r\n            setIsButtonShow(false)  \r\n            setIconNameAll()\r\n            setPassword(\"\")  \r\n            }\r\n        },\r\n        [login, inputName, password, userInfoRequestFailed, dispatch, email, name],\r\n      );\r\n    \r\n\r\n    const ChangeButton = <div className={ProfileStyles.changeButton}>\r\n        <Button type=\"primary\" size=\"medium\" > Сохранить </Button>   \r\n        <span className=\"mr-2\"></span>  \r\n        <Button type=\"secondary\" size=\"medium\" onClick={()=> {\r\n            setInputName(name);\r\n            setLogin(email);\r\n            setIsButtonShow(false);\r\n            setIconNameAll()\r\n        }} > Отменить </Button>  \r\n    </div>\r\n\r\n    const setIconNameAll = () => {\r\n        setIconName('EditIcon')\r\n        setIconEmail('EditIcon')\r\n        setIconPassword('EditIcon')\r\n        setdisableName(true)\r\n        setdisableEmail(true)\r\n        setdisablePassword(true)\r\n        }\r\n\r\n    const onChangeName = (e: MouseEvent<HTMLElement>) => {\r\n        showButton()\r\n        setdisableName(!disableName)\r\n        disableName ? setIconName('CheckMarkIcon') : setIconName('EditIcon');\r\n        setTimeout(() => inputRefName?.current?.focus(), 0);\r\n    }\r\n\r\n    const onChangeEmail = (e: MouseEvent<HTMLElement>) => {\r\n        showButton()\r\n        setdisableEmail(!disableEmail)\r\n        disableEmail ? setIconEmail('CheckMarkIcon') : setIconEmail('EditIcon');\r\n        setTimeout(() => inputRefEmail?.current?.focus(), 0);\r\n    }\r\n\r\n    const onChangePassword = (e: MouseEvent<HTMLElement>) => {\r\n        showButton()\r\n        setdisablePassword(!disablePassword)\r\n        disablePassword ? setIconPassword('CheckMarkIcon') : setIconPassword('EditIcon');\r\n        setTimeout(() => inputRefPassword?.current?.focus(), 0)\r\n    }\r\n\r\n    \r\n\r\n    const Profile = (\r\n        <form className=\"mb-20\" onSubmit={(e)=> {\r\n            e.preventDefault();\r\n            onChangeUserInfo()}}><Input\r\n        type={'text'}\r\n        placeholder={'Имя'}\r\n        onChange={e => {setInputName(e.target.value); showButton()}}\r\n        icon={iconName}\r\n        value={inputName}\r\n        name={'name'}\r\n        error={false}\r\n        ref={inputRefName}\r\n        onIconClick={onChangeName}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n        disabled={disableName}\r\n        key={'1userProfile'}\r\n    />\r\n    <Input\r\n        type={'email'}\r\n        placeholder={'Логин'}\r\n        onChange={e => {setLogin(e.target.value); showButton()}}\r\n        icon={iconEmail}\r\n        value={login}\r\n        name={'email'}\r\n        error={false}\r\n        ref={inputRefEmail}\r\n        onIconClick={onChangeEmail}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n        disabled={disableEmail}\r\n        key={'2userProfile'}\r\n    />\r\n    <Input\r\n        type={typeInputPassword}\r\n        placeholder={'Пароль'}\r\n        onChange={e => {setPassword(e.target.value); showButton()}}\r\n        icon={iconPassword}\r\n        value={password}\r\n        name={'password'}\r\n        error={false}\r\n        ref={inputRefPassword}\r\n        onIconClick={onChangePassword}\r\n        errorText={'Ошибка'}\r\n        size={'default'}\r\n        disabled={disablePassword}\r\n        key={'3userProfile'}\r\n        \r\n    />\r\n    {isButtonShow ? ChangeButton : \"\"}\r\n    </form>\r\n    );\r\n      \r\n\r\n    const loginView = <Redirect to=\"/login\" />\r\n    const profileView = (<main>\r\n        <div className={`${ProfileStyles.container} mt-30`}>\r\n            <section className={`${ProfileStyles.menu} mr-15`}> \r\n            <NavLink  exact \r\n                to={`${url}`}\r\n                className={`text text_type_main-medium pt-4 pb-4 ${ProfileStyles.secondary}`}\r\n                activeClassName={ProfileStyles.primary}\r\n            > Профиль </NavLink>\r\n            <NavLink exact \r\n                to={`${url}/orders`} \r\n                className={`text text_type_main-medium pt-4 pb-4  ${ProfileStyles.secondary}`}\r\n                activeClassName={ProfileStyles.primary}\r\n            > История заказов </NavLink>\r\n\r\n            <Button type=\"secondary\" size=\"medium\" onClick={onLogout}>\r\n                <span className={`text text_type_main-medium text_color_inactive ${ProfileStyles.textBtn}`}> Выход</span>\r\n            </Button>\r\n                <p className=\"text text_type_main-default text_color_inactive mt-20\">\r\n                    В этом разделе вы можете\r\n                    изменить свои персональные данные\r\n                </p>\r\n        </section>\r\n        <section>\r\n            <Switch>\r\n            <Route path={`${url}`} exact> {Profile}</Route>\r\n            <Route path={`${url}/orders`} exact> <OrdersPage/> </Route> \r\n            <Route path='/profile/orders/:id'> <OrderPage /></Route>\r\n            </Switch>\r\n        </section>\r\n        </div>\r\n    </main>)\r\n\r\n\r\n    return (\r\n        email ? profileView : loginView \r\n\r\n    )\r\n\r\n    \r\n}         \r\n\r\n\r\n","import { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { getUserInfoApi } from '../services/actions/user-info';\r\nimport { useAppSelector, useDispatch } from \"../services/hooks\";\r\nimport { ILocationState } from '../services/types/data';\r\n\r\n\r\nexport function ProtectedRoute({ children, ...rest }: RouteProps) {\r\n    const { userInfo, userInfoStatus } = useAppSelector(state => state.userInfo)\r\n    const [isUserLoaded, setUserLoaded] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n    let location = useLocation<ILocationState>();\r\n   \r\n    useEffect(() => {\r\n      const init = () => {\r\n        // Вызовем запрос getUser и изменим состояние isUserLoaded\r\n        dispatch(getUserInfoApi());\r\n      };\r\n      // При монтировании компонента запросим данные о пользователе\r\n        init();\r\n    }, [dispatch]);\r\n\r\n    useEffect(()=>{\r\n      if(userInfoStatus){\r\n        setUserLoaded(true)\r\n      }\r\n    },[userInfoStatus,userInfo])\r\n\r\n\r\n    if (!isUserLoaded) {\r\n        return <>Спиннер</>;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={() =>\r\n         // Если пользователь есть, используем компонент, который передан в ProtectedRoute\r\n         userInfo.email ? (\r\n              children\r\n            ) : (\r\n                // Если пользователя нет в хранилище, происходит переадресация на роут /login\r\n                <Redirect to={{ pathname: \"/login\", state: { from: location } }}/>\r\n            )\r\n          }\r\n        />\r\n      );\r\n    } ","import type { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { TWsConnectionActions } from \"./actions/websockets\";\r\nimport type { AppDispatch, TAppActions, TRootState } from \"./types\";\r\nimport { WS_CONNECTION_START } from '../services/actions/websockets';\r\n\r\nexport const socketMiddleware  = (wsActions: TWsConnectionActions): Middleware => {\r\n    return ((store: MiddlewareAPI<AppDispatch, TRootState>) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => (action: TAppActions) => {\r\n            const { dispatch }  = store; \r\n            const { type, payload } = action;\r\n            const { \r\n                wsConnectionSuccess,\r\n                wsConnectionError, \r\n                wsConnectionClosed,\r\n                wsGetOrders\r\n            } = wsActions;\r\n\r\n            if(type === WS_CONNECTION_START) {\r\n                socket = new WebSocket(payload);\r\n            }\r\n                \r\n            if(socket){\r\n                //функция вызывается при открытии сокета\r\n                socket.onopen = () => {\r\n                    dispatch(wsConnectionSuccess())\r\n                };\r\n\r\n                //функция вызывается при ошибке соединения\r\n                socket.onerror = () => {\r\n                    dispatch(wsConnectionError)\r\n                };\r\n\r\n                //функция вызывается при получении события от сервера\r\n                socket.onmessage = event => {\r\n                    const {data} = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    dispatch(wsGetOrders(parsedData))\r\n                };\r\n                //функция вызывается при получении закрытии\r\n                socket.onclose = event => {\r\n                    dispatch(wsConnectionClosed)\r\n                }\r\n            } \r\n            next (action)\r\n        }; \r\n    }) as Middleware\r\n};","import styleHeader from './app-header.module.css';\r\nimport { BurgerIcon, ListIcon, Logo, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\ntype TIconTypes = 'secondary' | 'primary';\r\n\r\nconst AppHeader =  () => {\r\n    const [colorConstructor, setColorConstructor] = useState<TIconTypes>(\"secondary\")\r\n    const [colorOrders, setColorOrders] = useState<TIconTypes>(\"secondary\")\r\n    const [colorProfile, setColorProfiles] = useState<TIconTypes>(\"secondary\")\r\n\r\n    const history = useHistory(); \r\n\r\n    useEffect(()=> {\r\n        const setActiveMenu = () => {\r\n            if(history.location.pathname === \"/\"){\r\n                setColorConstructor(\"primary\")\r\n                setColorOrders(\"secondary\")\r\n                setColorProfiles(\"secondary\")\r\n            }else if(history.location.pathname === \"/feed\"){\r\n                setColorConstructor(\"secondary\")\r\n                setColorOrders(\"primary\")\r\n                setColorProfiles(\"secondary\")\r\n            } else if(history.location.pathname.includes(\"/profile\")){\r\n                setColorConstructor(\"secondary\")\r\n                setColorOrders(\"secondary\")\r\n                setColorProfiles(\"primary\")\r\n            }\r\n        }\r\n        setActiveMenu()\r\n    }, [history.location.pathname])\r\n\r\n    return(\r\n        <header className={`${styleHeader.header} text text_type_main-default  pt-4 pb-4`}>\r\n            <div className={styleHeader.wrapper}>\r\n                <section>\r\n                    <button className={`${styleHeader.btn} pr-5  mr-2`}>\r\n                        <Link to=\"/\">\r\n                        <BurgerIcon type={colorConstructor} />\r\n                        <span className={styleHeader[colorConstructor]}>Конструктор</span>\r\n                        </Link>\r\n                    </button>\r\n                    <button className={`${styleHeader.btn} pr-5  mr-2`}>\r\n                        <Link to={{pathname: \"/feed\"}}>\r\n                        <ListIcon type={colorOrders} />\r\n                        <span className={styleHeader[colorOrders]}>Лента заказов</span>\r\n                        </Link>\r\n                    </button>\r\n                </section>\r\n                <section>\r\n                    <Link to=\"/\">\r\n                    <Logo/>\r\n                    </Link>\r\n                </section>\r\n                <section className={styleHeader.btn }>\r\n                    <Link to={{pathname: \"/profile\"}}>\r\n                    <ProfileIcon type={colorProfile} />\r\n                    <span className={styleHeader[colorProfile]}>Личный кабинет</span>\r\n                    </Link>\r\n                </section>\r\n            </div>\r\n        </header>\r\n    )\r\n};  \r\n\r\n\r\nexport default AppHeader;","import React, {useState} from \"react\";\r\nimport {\r\n    Route,\r\n    Switch, useLocation, useHistory\r\n  } from \"react-router-dom\";\r\nimport IngredientDetails from \"./ingredient-details/ingredient-details\";\r\nimport { resetSelectedIngredient } from \"../services/actions/selected-ingredient\";\r\nimport Modal from \"./modal/modal\";\r\nimport { MainPage, LoginPage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, ProfilePage, NotFound404, IngredientPage, FeedPage, OrderPage } from '../pages';\r\nimport { ProtectedRoute } from \"./protectedRoute\";\r\nimport { saveStateInLocalstorage } from './localstorage';\r\nimport AppHeader from \"./app-header/app-header\";\r\nimport { useDispatch } from \"../services/hooks\";\r\nimport { IBackgroundLocation } from \"../services/types/data\";\r\nimport { OrderComponent } from \"./order-component/order-component\";\r\n\r\n  \r\nconst ModalSwitch = () => {\r\n    const location = useLocation<IBackgroundLocation>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    let background = location.state && location.state.background;\r\n    const [ isModalOpen, setIsModalOnen] = useState(false)\r\n\r\n    const handleCloseModal = () => {\r\n        dispatch(resetSelectedIngredient())\r\n        setIsModalOnen(!isModalOpen)\r\n        saveStateInLocalstorage('ingredientInModal', false);\r\n        history.goBack();\r\n    };\r\n\r\n\r\n    return (\r\n      <>\r\n        <AppHeader/>\r\n        <Switch location={background || location}>\r\n            <Route path='/' exact>\r\n                <MainPage />\r\n            </Route>\r\n            <Route path='/ingredients/:ingredientId' exact>\r\n                <IngredientPage />\r\n            </Route>\r\n            <Route  path=\"/login\" exact={true}>\r\n                <LoginPage />\r\n            </Route >\r\n            <Route path=\"/register\" exact={true}>\r\n                <RegisterPage />\r\n            </Route>\r\n            <Route path=\"/forgot-password\" exact={true}>\r\n                <ForgotPasswordPage />\r\n            </Route>\r\n            <Route path=\"/reset-password\" exact={true}>\r\n                <ResetPasswordPage />\r\n            </Route>\r\n            <ProtectedRoute path=\"/profile/orders/:id\" exact>\r\n                <OrderPage/>\r\n            </ProtectedRoute>\r\n            <ProtectedRoute path=\"/profile\">\r\n                <ProfilePage />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute path=\"/orders/:id\">\r\n              <OrderPage/>\r\n            </ProtectedRoute>\r\n            <Route path='/feed/:id' exact>\r\n                <OrderPage/>\r\n            </Route>\r\n            <Route path=\"/feed\">\r\n                <FeedPage/>\r\n            </Route>\r\n            <Route>\r\n                <NotFound404 />\r\n            </Route>\r\n        </Switch>\r\n\r\n        {background && (\r\n          <Route exact\r\n            path='/ingredients/:ingredientId'\r\n            children={\r\n              <Modal header=\"Детали ингредиента\" onClose={handleCloseModal}>\r\n                <IngredientDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n        {background && (\r\n          <Route exact\r\n            path='/feed/:id'\r\n            children={\r\n              <Modal header=\"\" onClose={handleCloseModal}>\r\n                <OrderComponent />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n        {background && (\r\n          <Route exact\r\n            path='/profile/orders/:id'\r\n            children={\r\n              <Modal header=\"\" onClose={handleCloseModal}>\r\n                <OrderComponent />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\nexport default ModalSwitch;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport styleApp from './app.module.css';\r\nimport ModalSwitch from '../modal-switch';\r\n\r\nconst App = () => { \r\n\r\n  return (\r\n      <div className={`${styleApp.app} mb-10`}>\r\n          <Router>\r\n            <Switch>\r\n              <Route>\r\n                <ModalSwitch />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { GET_INGREDIENTS_CONSTRUCTOR_BUN, GET_INGREDIENTS_CONSTRUCTOR_MAIN , RESET_INGREDIENTS_CONSTRUCTOR, ADD_INGREDIENTS_CONSTRUCTOR_MAIN, SORT_INGREDIENTS_CONSTRUCTOR} from '../actions/constructor-list';\r\nimport { IIngredient } from '../types/data';\r\nimport { TConstructorListActions } from '../actions/constructor-list';\r\n\r\n\r\nexport type TConstructorListInit = {\r\n        bun: Array<IIngredient> | [];\r\n        main: Array<IIngredient> | []\r\n    \r\n}\r\n\r\nexport const initialState = {\r\n        bun: [],\r\n        main: []\r\n}\r\n\r\n// Редьюсер списка ингридиентов в конструкторе\r\nconst constructorList = (state:TConstructorListInit = initialState, action: TConstructorListActions): TConstructorListInit => {\r\n    switch(action.type) {\r\n        case GET_INGREDIENTS_CONSTRUCTOR_BUN:\r\n            return {\r\n                ...state,\r\n                bun: [action.payload]\r\n            }\r\n        case ADD_INGREDIENTS_CONSTRUCTOR_MAIN:\r\n            return {\r\n                ...state,\r\n                main:\r\n                [\r\n                    ...state.main, action.payload\r\n                ]\r\n            }\r\n        case GET_INGREDIENTS_CONSTRUCTOR_MAIN:\r\n            return {\r\n                ...state,\r\n                main: action.payload\r\n            }\r\n        case RESET_INGREDIENTS_CONSTRUCTOR:\r\n            return {\r\n                bun: [],\r\n                main: []\r\n            }\r\n        case SORT_INGREDIENTS_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                main:  action.payload\r\n            }\r\n        default:\r\n            return state;\r\n }};\r\n\r\n export default constructorList;","import { GET_SELECTED_INGREDIENT, RESET_SELECTED_INGREDIENT } from '../actions/selected-ingredient';\r\nimport { IIngredient } from '../types/data';\r\nimport { TSelectedIngredientActions } from '../actions/selected-ingredient';\r\n\r\n\r\nconst initialState: null | IIngredient = null\r\n\r\n\r\n\r\n// Редьюсер отображения выбранного ингредиента\r\nconst selectedIngredient  = (state:null | IIngredient = initialState, action: TSelectedIngredientActions):null | IIngredient => { \r\n    switch(action.type) {\r\n        case GET_SELECTED_INGREDIENT:\r\n            return action.payload\r\n        case RESET_SELECTED_INGREDIENT:\r\n            return null\r\n        default:\r\n            return state;\r\n }};\r\n\r\n export default selectedIngredient;","import { TOrderNumberActions } from '../actions/order-number';\r\nimport {\r\n    GET_ORDER_API, \r\n    GET_ORDER_API_FAILED, \r\n    GET_ORDER_API_SUCCESS, \r\n    RESET_ORDER } from '../actions/order-number';\r\n\r\n\r\n\r\nexport type TOrderNumberInit = {\r\n    orderApiRequest: boolean,\r\n    orderApiFailed: boolean,\r\n    orderNumber: string\r\n}\r\n\r\nexport const initialState:TOrderNumberInit = {\r\n    orderApiRequest: false,\r\n    orderApiFailed: false,\r\n    orderNumber: \"\"\r\n}\r\n    \r\n //Редьюсер номера заказа\r\n\r\n export const orderNumber = (state:TOrderNumberInit = initialState, action: TOrderNumberActions):TOrderNumberInit => { \r\n    switch(action.type) {\r\n        case GET_ORDER_API: {\r\n            return {\r\n              ...state,\r\n              orderApiRequest: true,\r\n              orderApiFailed: false,\r\n            }\r\n        }\r\n        case GET_ORDER_API_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      orderNumber: action.payload, \r\n                      orderApiRequest: false \r\n                  };\r\n          }\r\n        case GET_ORDER_API_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    orderApiFailed: true, \r\n                    orderApiRequest: false \r\n                };\r\n        }\r\n        case RESET_ORDER: {\r\n            return {\r\n                ...state, \r\n                orderApiRequest: false,\r\n                orderApiFailed: false,\r\n                orderNumber: \"\"\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n \r\n","import {GET_DATA_API , GET_DATA_API_FAILED , GET_DATA_API_SUCCESS, SET_DATA_API} from '../actions/data-api';\r\nimport { IIngredient } from '../types/data';\r\nimport { TDataApiActions } from '../actions/data-api';\r\n\r\nexport interface IDataApi {\r\n    dataApiRequest: boolean,\r\n    dataApiFailed: boolean,\r\n    dataApi: Array<IIngredient> | []\r\n}\r\n\r\nexport const initialState = {\r\n    dataApiRequest: false,\r\n    dataApiFailed: false,\r\n    dataApi: []\r\n}\r\n\r\n\r\nexport const dataApiReducer = (state:IDataApi = initialState, action: TDataApiActions ): IDataApi => {\r\n    switch (action.type) {\r\n        case GET_DATA_API: {\r\n          return {\r\n            ...state,\r\n            dataApiRequest: true,\r\n            dataApiFailed: false,\r\n          };\r\n        }\r\n        case GET_DATA_API_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      dataApi: action.payload, \r\n                      dataApiRequest: false \r\n                  };\r\n          }\r\n        case GET_DATA_API_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    dataApiFailed: true, \r\n                    dataApiRequest: false \r\n                };\r\n        }\r\n        case SET_DATA_API: {\r\n            return { \r\n                        ...state, \r\n                        dataApi: action.payload\r\n                    };\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n} \r\n","import {\r\n    GET_USER_REGISTER_API, \r\n    GET_USER_REGISTER_API_FAILED, \r\n    GET_USER_REGISTER_API_SUCCESS } from '../actions/user-register-api';\r\n\r\nimport {TAuthorization} from '../types/data';\r\nimport { TUserRegisterActions } from '../actions/user-register-api';\r\n\r\nexport interface IUserRegisterInit {\r\n    userRegisterApiRequest: boolean,\r\n    userRegisterApiFailed: boolean,\r\n    userRegisterApi: TAuthorization | {}\r\n}\r\n\r\nexport const initialState: IUserRegisterInit = {\r\n    userRegisterApiRequest: false,\r\n    userRegisterApiFailed: false,\r\n    userRegisterApi: {}   \r\n}\r\n\r\nexport const userRegisterApi = (state = initialState, action: TUserRegisterActions): IUserRegisterInit => { \r\n    switch(action.type) {\r\n        case GET_USER_REGISTER_API: {\r\n            return {\r\n              ...state,\r\n              userRegisterApiRequest: true,\r\n              userRegisterApiFailed: false,\r\n            }\r\n        }\r\n        case GET_USER_REGISTER_API_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      userRegisterApi: action.payload, \r\n                      userRegisterApiRequest: false \r\n                  };\r\n          }\r\n        case GET_USER_REGISTER_API_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    userRegisterApiFailed: true, \r\n                    userRegisterApiRequest: false \r\n                };\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n ","import {\r\n    GET_USER_LOGIN, \r\n    GET_USER_LOGIN_FAILED, \r\n    GET_USER_LOGIN_SUCCESS, \r\n} from '../actions/user-login';\r\nimport { TUserLoginActions } from '../actions/user-login';\r\n\r\nexport interface IUserLoginInit {\r\n    userLoginRequest1: boolean,\r\n    userLoginFailed: boolean,\r\n}\r\n\r\nexport const initialState:IUserLoginInit = {\r\n    userLoginRequest1: false,\r\n    userLoginFailed: false,  \r\n}\r\n\r\nexport const userLogin = (state:IUserLoginInit = initialState, action: TUserLoginActions):IUserLoginInit => { \r\n    switch(action.type) {\r\n        case GET_USER_LOGIN: {\r\n            return {\r\n              ...state,\r\n              userLoginRequest1: true,\r\n              userLoginFailed: false,\r\n            }\r\n        }\r\n        case GET_USER_LOGIN_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      userLoginRequest1: false,\r\n                      userLoginFailed: false \r\n                  };\r\n          }\r\n        case GET_USER_LOGIN_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    userLoginFailed: true, \r\n                    userLoginRequest1: false \r\n                };\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n ","import {\r\n    USER_LOGOUT_REQUEST,\r\n    USER_LOGOUT_REQUEST_FAILED, \r\n    USER_LOGOUT_REQUEST_SUCCESS, \r\n} from '../actions/user-logout';\r\nimport { TUserLogoutActions } from '../actions/user-logout';\r\n\r\nexport interface IUserLogoutInit {\r\n    userLogoutRequest: boolean,\r\n    userLogoutRequestFailed: boolean,\r\n}\r\n\r\n\r\nexport const initialState:IUserLogoutInit = {\r\n    userLogoutRequest: false,\r\n    userLogoutRequestFailed: false,\r\n}\r\n\r\nexport const userLogout = (state:IUserLogoutInit = initialState, action: TUserLogoutActions): IUserLogoutInit => { \r\n    switch(action.type) {\r\n        case USER_LOGOUT_REQUEST: {\r\n            return {\r\n              ...state,\r\n              userLogoutRequest: true,\r\n              userLogoutRequestFailed: false,\r\n            }\r\n        }\r\n        case USER_LOGOUT_REQUEST_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      userLogoutRequest: false,\r\n                      userLogoutRequestFailed: false \r\n                  };\r\n          }\r\n        case USER_LOGOUT_REQUEST_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    userLogoutRequestFailed: true, \r\n                    userLogoutRequest: false \r\n                };\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n ","import{\r\n    GET_RESET_PASSWORD_TOKEN_REQUEST, \r\n    GET_RESET_PASSWORD_TOKEN_SUCCESS, \r\n    GET_RESET_PASSWORD_TOKEN_FAILED, \r\n    GET_RESET_PASSWORD_TOKEN_STATUS,\r\n    RESET_PASSWORD_REQUEST, \r\n    RESET_PASSWORD_SUCCESS, \r\n    RESET_PASSWORD_FAILED,\r\n    RESET_PASSWORD_STATUS \r\n} from '../actions/password';\r\nimport { TPasswordActions } from '../actions/password';\r\n\r\nexport interface IPasswordInit {\r\n    getTokenRequest: boolean,\r\n    getTokenFailed: boolean,\r\n    getTokenStatus: string,\r\n    resetPasswordRequest: boolean,\r\n    resetPasswordFailed: boolean,\r\n    resetPasswordStatus: string\r\n}\r\n\r\nexport const initialState: IPasswordInit = {\r\n    getTokenRequest: false,\r\n    getTokenFailed: false,\r\n    getTokenStatus: \"\",\r\n    resetPasswordRequest: false,\r\n    resetPasswordFailed: false,\r\n    resetPasswordStatus: \"\",\r\n    \r\n}\r\n\r\nexport const password = (state:IPasswordInit = initialState, action: TPasswordActions): IPasswordInit => { \r\n    switch(action.type) {\r\n        case GET_RESET_PASSWORD_TOKEN_REQUEST: {\r\n            return {\r\n              ...state,\r\n              getTokenRequest: true,\r\n              getTokenFailed: false,\r\n            }\r\n        }\r\n        case GET_RESET_PASSWORD_TOKEN_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              getTokenRequest: false,\r\n              getTokenFailed: false\r\n            }\r\n        }\r\n        case GET_RESET_PASSWORD_TOKEN_FAILED: {\r\n            return {\r\n                ...state, \r\n                getTokenFailed: true, \r\n                getTokenRequest: false \r\n            }\r\n        }\r\n        case GET_RESET_PASSWORD_TOKEN_STATUS: {\r\n            return {\r\n                ...state, \r\n                getTokenStatus: action.payload\r\n            }\r\n        }\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {\r\n              ...state,\r\n              resetPasswordRequest: true,\r\n              resetPasswordFailed: false,\r\n            }\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              resetPasswordRequest: false,\r\n              resetPasswordFailed: false\r\n            }\r\n        }\r\n        case RESET_PASSWORD_FAILED: {\r\n            return {\r\n                ...state, \r\n                resetPasswordFailed: true, \r\n                resetPasswordRequest: false \r\n            }\r\n        }\r\n        case RESET_PASSWORD_STATUS: {\r\n            return {\r\n                ...state, \r\n                resetPasswordStatus: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n ","import {\r\n    GET_USER_INFO, \r\n    ADD_USER_INFO,\r\n    USER_INFO_REQUEST_FAILED,\r\n    USER_INFO_REQUEST_SUCCESS,\r\n    RESET_USER_INFO,\r\n    USER_INFO_STATUS\r\n} from '../actions/user-info';\r\nimport { IUserInfo } from '../types/data';\r\nimport { TUserActions } from '../actions/user-info';\r\n\r\n\r\n\r\nexport interface IUserInfoInitial {\r\n    userInfoRequest: boolean;\r\n    userInfoRequestFailed: boolean;\r\n    userInfoStatus: string;\r\n    userInfo: IUserInfo\r\n}\r\n\r\nexport const initialState: IUserInfoInitial = {\r\n    userInfoRequest: false,\r\n    userInfoRequestFailed: false,\r\n    userInfoStatus: \"\",\r\n    userInfo: {\r\n        name: \"\",\r\n        email: \"\"\r\n    }   \r\n}\r\n\r\nexport const userInfo = (state:IUserInfoInitial = initialState, action: TUserActions):IUserInfoInitial => { \r\n    switch(action.type) {\r\n        case ADD_USER_INFO: {\r\n            return {\r\n              ...state,\r\n              userInfo: action.payload\r\n            }\r\n        }\r\n        case GET_USER_INFO: {\r\n            return {\r\n              ...state,\r\n              userInfoRequest: true,\r\n              userInfoRequestFailed: false,\r\n            }\r\n        }\r\n        case USER_INFO_REQUEST_SUCCESS: {\r\n            return { \r\n                      ...state, \r\n                      userInfoRequest: false,\r\n                      userInfo: action.payload, \r\n                      userInfoRequestFailed: false \r\n                  };\r\n          }\r\n        case USER_INFO_REQUEST_FAILED: {\r\n        return { \r\n                    ...state, \r\n                    userInfoRequestFailed: true, \r\n                    userInfoRequest: false \r\n                };\r\n        }\r\n        case RESET_USER_INFO : {\r\n            return { \r\n                        ...state, \r\n                        userInfo: {\r\n                            name: \"\",\r\n                            email: \"\"\r\n                        } \r\n                    };\r\n            }\r\n        \r\n        case USER_INFO_STATUS: {\r\n            return { \r\n                    ...state, \r\n                    userInfoStatus: action.payload\r\n                    };\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n ","import {\r\n    WS_CONNECTION_SUCCESS, \r\n    WS_CONNECTION_ERROR, \r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_ORDERS\r\n} from '../actions/websockets';\r\n\r\nimport { TWsConnectionActions } from '../actions/websockets';\r\nimport { IMessageWS } from '../types/data';\r\n\r\n\r\nexport const wsConnectionState: IMessageWS = {\r\n    wsConnected: false,\r\n    orders: [],\r\n    total: null,\r\n    totalToday: null\r\n}\r\n\r\nexport const wsConnection = (state: IMessageWS =wsConnectionState, action: TWsConnectionActions):IMessageWS => {\r\n    switch(action.type) {\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                error: undefined,\r\n                wsConnected: true\r\n            }\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return{\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false\r\n            }\r\n        }\r\n        case WS_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                wsConnected: false\r\n            };\r\n        }\r\n        case WS_GET_ORDERS: {\r\n            return{\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            }\r\n        }        \r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n} ","import { combineReducers } from \"redux\";\r\nimport constructorList from \"./constructor-list\";\r\nimport selectedIngredient from \"./selected-ingredient\";\r\nimport { orderNumber }  from \"./order-number\";\r\nimport { dataApiReducer, } from \"./data-api\";\r\nimport { userRegisterApi } from \"./user-register-api\";\r\nimport { userLogin } from \"./user-login\";\r\nimport { userLogout } from \"./user-logout\";\r\nimport { password } from \"./password\";\r\nimport { userInfo } from \"./user-info\";\r\nimport { wsConnection } from \"./websockets\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    dataApiReducer,\r\n    constructorList,\r\n    selectedIngredient,\r\n    orderNumber, \r\n    userRegisterApi, \r\n    userLogin, \r\n    userLogout,\r\n    password,\r\n    userInfo,\r\n    wsConnection\r\n} )\r\n\r\nexport default rootReducer;","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { socketMiddleware } from './socket-middleware';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/root-reducer';\r\nimport { wsActions } from '../services/actions/websockets';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\n\r\nconst store = createStore(rootReducer, enhancer); \r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './services/store';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <React.StrictMode>\r\n      <Provider  store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__3cmQk\",\"wrapperOrder\":\"feed_wrapperOrder__3YO7_\",\"orderList\":\"feed_orderList__3Z3s1\",\"сommonInfo\":\"feed_сommonInfo__3KkZx\",\"orderDisplay\":\"feed_orderDisplay__2ZZqr\",\"digits\":\"feed_digits__8GIHT\",\"waveColor\":\"feed_waveColor__3RxZm\",\"wrapperStatus\":\"feed_wrapperStatus__2Qp4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderMain\":\"order-component_orderMain__2HbLt\",\"wrapper\":\"order-component_wrapper__2dVEg\",\"wrapperIconImg\":\"order-component_wrapperIconImg__3qM5P\",\"wrapperLi\":\"order-component_wrapperLi__1TL-_\",\"liText\":\"order-component_liText__2bwKf\",\"liCount\":\"order-component_liCount__h3Tey\",\"liPrice\":\"order-component_liPrice__2qWmO\",\"footer\":\"order-component_footer__3HxU8\",\"numberOrderCenter\":\"order-component_numberOrderCenter__1MN7L\",\"numberOrderleft\":\"order-component_numberOrderleft__1GlUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-item_container__2mrF9\",\"headerCard\":\"order-item_headerCard__qwrGl\",\"ingedientCard\":\"order-item_ingedientCard__9VnPz\",\"wrapperIcons\":\"order-item_wrapperIcons__3lZwy\",\"wrapperIconImg\":\"order-item_wrapperIconImg__3wT1p\",\"footerCard\":\"order-item_footerCard__32onO\",\"wrapperPrice\":\"order-item_wrapperPrice__2aJNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1Zs_4\",\"menu\":\"profile_menu__1Aayd\",\"changeButton\":\"profile_changeButton__3Lyik\",\"primary\":\"profile_primary__3XQpq\",\"secondary\":\"profile_secondary__2Kv1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"app-header_primary__6hF5L\",\"secondary\":\"app-header_secondary__2HeYS\",\"header\":\"app-header_header__vL_m6\",\"wrapper\":\"app-header_wrapper__-crTI\",\"btn\":\"app-header_btn__sHzkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-constructor_wrapper__3S9-a\",\"scroll\":\"burger-constructor_scroll__3lAdW\",\"constructorCard\":\"burger-constructor_constructorCard__1Qqva\",\"totalWrapper\":\"burger-constructor_totalWrapper__3AYW0\",\"nonActiveButton\":\"burger-constructor_nonActiveButton__1qFv_\",\"emptyTopElement\":\"burger-constructor_emptyTopElement__InDPW\",\"emptyBottomElement\":\"burger-constructor_emptyBottomElement__2taFj\",\"emptyIngredientElements\":\"burger-constructor_emptyIngredientElements__3gZ4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-ingredients_wrapper__2d30C\",\"tabsWrapper\":\"burger-ingredients_tabsWrapper__2CkL6\",\"ingedientCardContainer\":\"burger-ingredients_ingedientCardContainer__1jgEL\",\"ingedientType\":\"burger-ingredients_ingedientType__9B37t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingedientCard\":\"ingredient-card_ingedientCard__1zdnN\",\"priceWrapper\":\"ingredient-card_priceWrapper__1m-sP\",\"titleCard\":\"ingredient-card_titleCard__1I_Fn\",\"link\":\"ingredient-card_link__2QVit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredient_wrapper__kJv83\",\"card\":\"ingredient_card__1iaE5\",\"modalProps\":\"ingredient_modalProps__EbPZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalMain\":\"ingredient-details_modalMain__WeuLy\",\"modalProps\":\"ingredient-details_modalProps__3BPE-\",\"link\":\"ingredient-details_link__7ooMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"modal_modalWrapper__zrg2j\",\"header\":\"modal_header__HnEuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"orders_section__30Hc3\",\"ordersList\":\"orders_ordersList__3q3wY\"};"],"sourceRoot":""}